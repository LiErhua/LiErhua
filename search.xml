<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[LaTeX入门系列之易错易混]]></title>
    <url>%2F2018%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%98%93%E9%94%99%E6%98%93%E6%B7%B7%2F</url>
    <content type="text"><![CDATA[关键词：注意 这一节，我们把我经常出错的地方列一下 1\vskip 5cm %不能使用\vskip&#123;5cm&#125; 123\newCJKfontfamily\qingsong&#123;FZQKBYSJW--GB1-0&#125;%定义字体族新的名称\setCJKfamilyfont&#123;qingsong&#125;&#123;FZQKBYSJW--GB1-0&#125;%设置CJK字体族注意二者的意思不同，一个是fontfamily一个是familyfont 123\newCJKfontfamily\qingsong[ItalicFont = FZQKBYSJW--GB1-0,BoldFont = FZQKBYSJW--GB1-0]&#123;FZQKBYSJW--GB1-0&#125;\newCJKfontfamily\fs[ItalicFont = STFangsong,BoldFont = STFangsong]&#123;STFangsong&#125;尽量在定义字体的时候把正体，斜体，粗体等全部定义完整，不然会出现找不到这种字体，爆出警告]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>错误集锦</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2017%2F09%2F19%2F%E5%A4%9C%E9%9B%A8%E7%A7%8B%E7%81%AF%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[音乐小札]]></title>
    <url>%2F2017%2F09%2F13%2F%E7%9F%B3%E6%A5%A0%E5%B0%8F%E6%9C%AD%2F</url>
    <content type="text"><![CDATA[特别喜欢日本版深夜食堂的主题曲： 一部动漫的主题曲《未闻花名》： 一声画角谯门，半庭新月黄昏，雪里山前水滨。竹篱茅舍，淡烟衰草孤村。 以前一想到冬天，就是雪，就是春节，就是白水煮豆腐，就是凛冽但是清澈的风……一棵梅开了冬天就来了 速去逮一只猫~ 晴空一鹤排云上，便引诗情到碧霄 张爱玲的故事~]]></content>
      <categories>
        <category>essay</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python 数据处理笔记pandas（一）]]></title>
    <url>%2F2017%2F09%2F10%2Fpython%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0pandas%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[pandas是进行数据处理的十分流行的第三方库 pandas提供了： 便于操作数据的数据类型，即提供了高效的数据类型 很多的分析函数和分析工具，优雅的数据分析的操作 基于NumPy实现的一个扩展库。 pandas主要提供了两个数据类型： Series —— 相当于一个一维的数据类型 DataFrame — — 相当于一个多维的数据类型 NumPy Pandas 基础数据类型 扩展数据类型 关注数据的结构表达 关注数据的应用表达 注重维度：数据之间的关系 注重索引：数据与索引之间的关系 ###两种数据类型 Series Series由一组数据和它的索引组成 index_0 —&gt; data_a index_1 —&gt; data_b index_2 —&gt; data_c 值得类型可以相同，可以不同 可以接收生成Series对象的值有：array-like，列表，字典，ndarray…… DataFrame 一个表格型的数据类型，每列值得类型可以不同 既有行索引，又有列索引；每一行的索引成为Index，每一列的索引称为column 可以表达二维或者多维数据 可由如下类型创建 二维的ndarray对象 一维的ndarray，列表，字典，元组或者Series构成的字典 Series类 其他的DataFrame类型 12345import pandas as pdimport numpy as npdb = pd.DataFrame(np.arange(16).reshape(4,4))db[2]#输出第3列db.ix[1]#输出第2行 对于一个DataFrame对象d 12345678910#d.index和d.columns的类型都是Index类d.index&gt;&gt;&gt; RangeIndex(start=0, stop=4, step=1)type(d.index)&gt;&gt;&gt; pandas.indexes.range.RangeIndexd.columns&gt;&gt;&gt; Index([0, 1, 'new', 2, 3], dtype='object')type(d.columns)&gt;&gt;&gt; pandas.indexes.base.Index#Index对象是不可修改的类型 NOTICE:也就是说Series和DataFrame的索引都是Index类型，而不是整数或者其他的String等类 数据类型的操作]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python数据处理笔记numpy篇(一)]]></title>
    <url>%2F2017%2F09%2F02%2FPython%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0numpy%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关键词：基础数据输入方式，数据选取方式 基础数据输入方式 123456789101112131415161718192021222324252627import numpy as np#np中不同数据的输入方式np.array(object) #object 是一个array_like,比如list,range #[1,2,3]的类型是list;range(3)的类型是range #但是np.array([1,2,3])和np.array(range(3))的返回值类型都是numpy.ndarray ------ &gt;&gt;&gt;np.array([1,2,3]) array([1,2,3]) &gt;&gt;&gt;print(np.array([1,2,3])) [1 2 3] #直接打印出来的没有逗号分隔 ------np.arange([start,]stop,[step,]dtype = None) #返回值也是ndarray类型 #输入格式与range相似，都是出入初值、终值、步长,可以用这一点来避免与array混淆 ------ &gt;&gt;&gt;np.arange(1,7,2) array([1,3,5]) ------np.linspace(start,stop,num = 50) #返回值是ndarray #出入为初值，终值，分隔的点数（num是指在初值终值之间平均分为多少点）np.loadtxt(path)#可打开的格式包含一般的txt,csv,dat等格式#返回值是ndarray 数据选取方式12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#数据的选取方式#第一个例子————一维data = np.arange(7) #形式如此data[start:stop:step,] #与list的切片使用方式是一致的 ------ &gt;&gt;&gt;data[1:6:2] array([1,3,5]) &gt;&gt;&gt;data[::-1][::2] array([6,4,2,0]) ------#例子二————二维data = np.array([[1,2,3], [4,5,6], [7,8,9]]) #形式为data[row,column] #其中row与column的切片方式与一维的是一致的，一定注意二者（row与column）之间有","分隔 ------ &gt;&gt;&gt;data[:,: ]#data的所有行所有列 array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) &gt;&gt;&gt;data[0,:]#所有列的第一行数据(就是第一行数据) array([1, 2, 3]) &gt;&gt;&gt;data[1,1:]#第二列之后所有列的第二行数据 array([5, 6]) &gt;&gt;&gt;data[0,0]#第一行第一列数据，返回值为numpy.int64 1 ------data = np.arange(24).reshape(2,3,4)#这是一个三维的array，英文表示分别为floor,row,columndata = array([[[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]])&gt;&gt;&gt;data[:,:,:]#输出整个data&gt;&gt;&gt;data[0,:,:]#等于data[0],第一个floor的所有的行和列array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]])&gt;&gt;&gt;data[:,1,:]#所有floor的第二行array([[ 4, 5, 6, 7], [16, 17, 18, 19]])&gt;&gt;&gt;data[:,:,1]#所有floor的第二列array([[ 1, 5, 9], [13, 17, 21]])]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[设置全局参数——定制matplotlib（部分翻译）]]></title>
    <url>%2F2017%2F09%2F01%2FPython%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86matplotlib%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE%E5%88%9D%E5%A7%8B%E5%8F%82%E6%95%B0%2F</url>
    <content type="text"><![CDATA[关键词：style，rcParams，rc 全局参数的设置—— ###使用style包： style包能让你很轻松的切花绘图的类型，预先在matplotlib中定义好了许多style类型供选择，使用的方式如下 12import matplotlib.pyplot as pltplt.style.use('ggplot')#ggplot就是一种style的名称 获得所有提供的styles的方法如下: 1style_list = print(plt.style.available) 输出的所有类型如下(使用的时候可以如下选择）： 123456789101112131415161718192021['seaborn-paper', 'seaborn-dark-palette', 'seaborn-notebook', 'dark_background', 'seaborn-whitegrid', 'seaborn-talk', 'fivethirtyeight', 'ggplot', 'seaborn-ticks', 'grayscale', 'bmh', 'seaborn-dark', 'seaborn-poster', 'seaborn-deep', 'seaborn-darkgrid', 'classic', 'seaborn-white', 'seaborn-colorblind', 'seaborn-bright', 'seaborn-pastel', 'seaborn-muted'] 定义属于自己的属性你可以定义属于自己风格的style，具体的定义方式请查看源文档。 复合风格 1plt.style.use(['bmh','dark_background']) 1#plt.style.use(style)--&gt;其中style类型有style : str, dict, or list 类型 介绍 str The name of a style or a path/URL to a style file. For a list of available style names, see style.available. dict Dictionary with valid key/value pairs formatplotlib.rcParams. list A list of style specifiers (str or dict) applied from first to last in the list. 暂时风格 不做介绍 rcParams模块（十分常用）动态rc设定 我们可以动态的改变已经在style中预设好的rc参数，所有的rc设置都被存储在一个类似字典的变量中——matplotlib.rcParams，这是一个全局包，工作方式有如下几种： 1234#方式一import matplotlib as mplmpl.rcParams['lines.linewidth'] = 2 #类字典格式，键值对mpl.rcParams['lines.color'] = 'r' 12#方式二mpl.rc('lines',linewidth = 2,color = 'r') 1234567#方式三font = &#123; 'family' : 'monospace', 'weight' : 'bold', 'size' : 'larger' &#125;mpl.rc('font',**font) NOTICE: 1234#关于rc的解释matplotlib.rc(group, **kwargs)#即rc接受一个Group,这个Group就是类型，比如'font','lines','text'等等#后面的可以直接接受单个的键值对，也可以直接接收字典 所有Group类型包含的属性见英文原文最后的matplotlibrc文档的示例 以下为原文： Customizing matplotlibUsing style sheetsThe style package adds support for easy-to-switch plotting “styles” with the same parameters as a matplotlibrc file (which is read at startup to configure matplotlib). There are a number of pre-defined styles provided by matplotlib. For example, there’s a pre-defined style called “ggplot”, which emulates the aesthetics of ggplot (a popular plotting package for R). To use this style, just add: 12&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&gt;&gt; plt.style.use(&apos;ggplot&apos;) To list all available styles, use: 1&gt;&gt;&gt; print(plt.style.available) Defining your own styleYou can create custom styles and use them by calling style.use with the path or URL to the style sheet. Additionally, if you add your &lt;style-name&gt;.mplstyle file to mpl_configdir/stylelib, you can reuse your custom style sheet with a call to style.use(&lt;style-name&gt;). By default mpl_configdir should be ~/.config/matplotlib, but you can check where yours is with matplotlib.get_configdir(); you may need to create this directory. You also can change the directory where matplotlib looks for the stylelib/ folder by setting the MPLCONFIGDIR environment variable, see matplotlib configuration and cache directory locations. Note that a custom style sheet in mpl_configdir/stylelib will override a style sheet defined by matplotlib if the styles have the same name. For example, you might want to create mpl_configdir/stylelib/presentation.mplstyle with the following: 123456axes.titlesize : 24axes.labelsize : 20lines.linewidth : 3lines.markersize : 10xtick.labelsize : 16ytick.labelsize : 16 Then, when you want to adapt a plot designed for a paper to one that looks good in a presentation, you can just add: 12&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&gt;&gt; plt.style.use(&apos;presentation&apos;) Composing stylesStyle sheets are designed to be composed together. So you can have a style sheet that customizes colors and a separate style sheet that alters element sizes for presentations. These styles can easily be combined by passing a list of styles: 12&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&gt;&gt; plt.style.use([&apos;dark_background&apos;, &apos;presentation&apos;]) ote that styles further to the right will overwrite values that are already defined by styles on the left. Temporary stylingIf you only want to use a style for a specific block of code but don’t want to change the global styling, the style package provides a context manager for limiting your changes to a specific scope. To isolate your styling changes, you can write something like the following: 123456789&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&gt;&gt;&gt;&gt;&gt; with plt.style.context((&apos;dark_background&apos;)):&gt;&gt;&gt; plt.plot(np.sin(np.linspace(0, 2 * np.pi)), &apos;r-o&apos;)&gt;&gt;&gt;&gt;&gt;&gt; # Some plotting code with the default style&gt;&gt;&gt;&gt;&gt;&gt; plt.show() matplotlib rcParamsDynamic rc settingsYou can also dynamically change the default rc settings in a python script or interactively from the python shell. All of the rc settings are stored in a dictionary-like variable called matplotlib.rcParams, which is global to the matplotlib package. rcParams can be modified directly, for example: 123import matplotlib as mplmpl.rcParams[&apos;lines.linewidth&apos;] = 2mpl.rcParams[&apos;lines.color&apos;] = &apos;r&apos; Matplotlib also provides a couple of convenience functions for modifying rc settings. The matplotlib.rc() command can be used to modify multiple settings in a single group at once, using keyword arguments: 12import matplotlib as mplmpl.rc(&apos;lines&apos;, linewidth=2, color=&apos;r&apos;) The matplotlib.rcdefaults() command will restore the standard matplotlib default settings. There is some degree of validation when setting the values of rcParams, see matplotlib.rcsetup for details. The matplotlibrc filematplotlib uses matplotlibrc configuration files to customize all kinds of properties, which we call rc settings or rc parameters. You can control the defaults of almost every property in matplotlib: figure size and dpi, line width, color and style, axes, axis and grid properties, text and font properties and so on. matplotlib looks for matplotlibrc in four locations, in the following order: matplotlibrc in the current working directory, usually used for specific customizations that you do not want to apply elsewhere. $MATPLOTLIBRC/matplotlibrc. It next looks in a user-specific place, depending on your platform: On Linux and FreeBSD, it looks in .config/matplotlib/matplotlibrc (or $XDG_CONFIG_HOME/matplotlib/matplotlibrc) if you’ve customized your environment. On other platforms, it looks in .matplotlib/matplotlibrc. See matplotlib configuration and cache directory locations. *INSTALL*/matplotlib/mpl-data/matplotlibrc, where *INSTALL* is something like /usr/lib/python3.5/site-packages on Linux, and maybe C:\Python35\Lib\site-packages on Windows. Every time you install matplotlib, this file will be overwritten, so if you want your customizations to be saved, please move this file to your user-specific matplotlib directory. To display where the currently active matplotlibrc file was loaded from, one can do the following: 123&gt;&gt;&gt; import matplotlib&gt;&gt;&gt; matplotlib.matplotlib_fname()&apos;/home/foo/.config/matplotlib/matplotlibrc&apos; See below for a sample matplotlibrc file. A sample matplotlibrc file123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627### MATPLOTLIBRC FORMAT# This is a sample matplotlib configuration file - you can find a copy# of it on your system in# site-packages/matplotlib/mpl-data/matplotlibrc. If you edit it# there, please note that it will be overwritten in your next install.# If you want to keep a permanent local copy that will not be# overwritten, place it in the following location:# unix/linux:# $HOME/.config/matplotlib/matplotlibrc or# $XDG_CONFIG_HOME/matplotlib/matplotlibrc (if $XDG_CONFIG_HOME is set)# other platforms:# $HOME/.matplotlib/matplotlibrc## See http://matplotlib.org/users/customizing.html#the-matplotlibrc-file for# more details on the paths which are checked for the configuration file.## This file is best viewed in a editor which supports python mode# syntax highlighting. Blank lines, or lines starting with a comment# symbol, are ignored, as are trailing comments. Other lines must# have the format# key : val # optional comment## Colors: for the color values below, you can either use - a# matplotlib color string, such as r, k, or b - an rgb tuple, such as# (1.0, 0.5, 0.0) - a hex string, such as ff00ff - a scalar# grayscale intensity such as 0.75 - a legal html color name, e.g., red,# blue, darkslategray#### CONFIGURATION BEGINS HERE# The default backend; one of GTK GTKAgg GTKCairo GTK3Agg GTK3Cairo# MacOSX Qt4Agg Qt5Agg TkAgg WX WXAgg Agg Cairo GDK PS PDF SVG# Template.# You can also deploy your own backend outside of matplotlib by# referring to the module name (which must be in the PYTHONPATH) as# &apos;module://my_backend&apos;.backend : TkAgg# If you are using the Qt4Agg backend, you can choose here# to use the PyQt4 bindings or the newer PySide bindings to# the underlying Qt4 toolkit.#backend.qt4 : PyQt4 # PyQt4 | PySide# Note that this can be overridden by the environment variable# QT_API used by Enthought Tool Suite (ETS); valid values are# &quot;pyqt&quot; and &quot;pyside&quot;. The &quot;pyqt&quot; setting has the side effect of# forcing the use of Version 2 API for QString and QVariant.# The port to use for the web server in the WebAgg backend.# webagg.port : 8888# If webagg.port is unavailable, a number of other random ports will# be tried until one that is available is found.# webagg.port_retries : 50# When True, open the webbrowser to the plot that is shown# webagg.open_in_browser : True# When True, the figures rendered in the nbagg backend are created with# a transparent background.# nbagg.transparent : False# if you are running pyplot inside a GUI and your backend choice# conflicts, we will automatically try to find a compatible one for# you if backend_fallback is True#backend_fallback: True#interactive : False#toolbar : toolbar2 # None | toolbar2 (&quot;classic&quot; is deprecated)#timezone : UTC # a pytz timezone string, e.g., US/Central or Europe/Paris# Where your matplotlib data lives if you installed to a non-default# location. This is where the matplotlib fonts, bitmaps, etc reside#datapath : /home/jdhunter/mpldata### LINES# See http://matplotlib.org/api/artist_api.html#module-matplotlib.lines for more# information on line properties.#lines.linewidth : 1.5 # line width in points#lines.linestyle : - # solid line#lines.color : C0 # has no affect on plot(); see axes.prop_cycle#lines.marker : None # the default marker#lines.markeredgewidth : 1.0 # the line width around the marker symbol#lines.markersize : 6 # markersize, in points#lines.dash_joinstyle : miter # miter|round|bevel#lines.dash_capstyle : butt # butt|round|projecting#lines.solid_joinstyle : miter # miter|round|bevel#lines.solid_capstyle : projecting # butt|round|projecting#lines.antialiased : True # render lines in antialiased (no jaggies)# The three standard dash patterns. These are scaled by the linewidth.#lines.dashed_pattern : 2.8, 1.2#lines.dashdot_pattern : 4.8, 1.2, 0.8, 1.2#lines.dotted_pattern : 1.1, 1.1#lines.scale_dashes : True#markers.fillstyle: full # full|left|right|bottom|top|none### PATCHES# Patches are graphical objects that fill 2D space, like polygons or# circles. See# http://matplotlib.org/api/artist_api.html#module-matplotlib.patches# information on patch properties#patch.linewidth : 1 # edge width in points.#patch.facecolor : C0#patch.edgecolor : black # if forced, or patch is not filled#patch.force_edgecolor : False # True to always use edgecolor#patch.antialiased : True # render patches in antialiased (no jaggies)### HATCHES#hatch.color : k#hatch.linewidth : 1.0### Boxplot#boxplot.notch : False#boxplot.vertical : True#boxplot.whiskers : 1.5#boxplot.bootstrap : None#boxplot.patchartist : False#boxplot.showmeans : False#boxplot.showcaps : True#boxplot.showbox : True#boxplot.showfliers : True#boxplot.meanline : False#boxplot.flierprops.color : &apos;k&apos;#boxplot.flierprops.marker : &apos;o&apos;#boxplot.flierprops.markerfacecolor : &apos;none&apos;#boxplot.flierprops.markeredgecolor : &apos;k&apos;#boxplot.flierprops.markersize : 6#boxplot.flierprops.linestyle : &apos;none&apos;#boxplot.flierprops.linewidth : 1.0#boxplot.boxprops.color : &apos;k&apos;#boxplot.boxprops.linewidth : 1.0#boxplot.boxprops.linestyle : &apos;-&apos;#boxplot.whiskerprops.color : &apos;k&apos;#boxplot.whiskerprops.linewidth : 1.0#boxplot.whiskerprops.linestyle : &apos;-&apos;#boxplot.capprops.color : &apos;k&apos;#boxplot.capprops.linewidth : 1.0#boxplot.capprops.linestyle : &apos;-&apos;#boxplot.medianprops.color : &apos;C1&apos;#boxplot.medianprops.linewidth : 1.0#boxplot.medianprops.linestyle : &apos;-&apos;#boxplot.meanprops.color : &apos;C2&apos;#boxplot.meanprops.marker : &apos;^&apos;#boxplot.meanprops.markerfacecolor : &apos;C2&apos;#boxplot.meanprops.markeredgecolor : &apos;C2&apos;#boxplot.meanprops.markersize : 6#boxplot.meanprops.linestyle : &apos;none&apos;#boxplot.meanprops.linewidth : 1.0### FONT## font properties used by text.Text. See# http://matplotlib.org/api/font_manager_api.html for more# information on font properties. The 6 font properties used for font# matching are given below with their default values.## The font.family property has five values: &apos;serif&apos; (e.g., Times),# &apos;sans-serif&apos; (e.g., Helvetica), &apos;cursive&apos; (e.g., Zapf-Chancery),# &apos;fantasy&apos; (e.g., Western), and &apos;monospace&apos; (e.g., Courier). Each of# these font families has a default list of font names in decreasing# order of priority associated with them. When text.usetex is False,# font.family may also be one or more concrete font names.## The font.style property has three values: normal (or roman), italic# or oblique. The oblique style will be used for italic, if it is not# present.## The font.variant property has two values: normal or small-caps. For# TrueType fonts, which are scalable fonts, small-caps is equivalent# to using a font size of &apos;smaller&apos;, or about 83%% of the current font# size.## The font.weight property has effectively 13 values: normal, bold,# bolder, lighter, 100, 200, 300, ..., 900. Normal is the same as# 400, and bold is 700. bolder and lighter are relative values with# respect to the current weight.## The font.stretch property has 11 values: ultra-condensed,# extra-condensed, condensed, semi-condensed, normal, semi-expanded,# expanded, extra-expanded, ultra-expanded, wider, and narrower. This# property is not currently implemented.## The font.size property is the default font size for text, given in pts.# 10 pt is the standard value.##font.family : sans-serif#font.style : normal#font.variant : normal#font.weight : medium#font.stretch : normal# note that font.size controls default text sizes. To configure# special text sizes tick labels, axes, labels, title, etc, see the rc# settings for axes and ticks. Special text sizes can be defined# relative to font.size, using the following values: xx-small, x-small,# small, medium, large, x-large, xx-large, larger, or smaller#font.size : 10.0#font.serif : DejaVu Serif, Bitstream Vera Serif, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif#font.sans-serif : DejaVu Sans, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif#font.cursive : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive#font.fantasy : Comic Sans MS, Chicago, Charcoal, Impact, Western, Humor Sans, xkcd, fantasy#font.monospace : DejaVu Sans Mono, Bitstream Vera Sans Mono, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace### TEXT# text properties used by text.Text. See# http://matplotlib.org/api/artist_api.html#module-matplotlib.text for more# information on text properties#text.color : black### LaTeX customizations. See http://wiki.scipy.org/Cookbook/Matplotlib/UsingTex#text.usetex : False # use latex for all text handling. The following fonts # are supported through the usual rc parameter settings: # new century schoolbook, bookman, times, palatino, # zapf chancery, charter, serif, sans-serif, helvetica, # avant garde, courier, monospace, computer modern roman, # computer modern sans serif, computer modern typewriter # If another font is desired which can loaded using the # LaTeX \usepackage command, please inquire at the # matplotlib mailing list#text.latex.unicode : False # use &quot;ucs&quot; and &quot;inputenc&quot; LaTeX packages for handling # unicode strings.#text.latex.preamble : # IMPROPER USE OF THIS FEATURE WILL LEAD TO LATEX FAILURES # AND IS THEREFORE UNSUPPORTED. PLEASE DO NOT ASK FOR HELP # IF THIS FEATURE DOES NOT DO WHAT YOU EXPECT IT TO. # preamble is a comma separated list of LaTeX statements # that are included in the LaTeX document preamble. # An example: # text.latex.preamble : \usepackage&#123;bm&#125;,\usepackage&#123;euler&#125; # The following packages are always loaded with usetex, so # beware of package collisions: color, geometry, graphicx, # type1cm, textcomp. Adobe Postscript (PSSNFS) font packages # may also be loaded, depending on your font settings#text.dvipnghack : None # some versions of dvipng don&apos;t handle alpha # channel properly. Use True to correct # and flush ~/.matplotlib/tex.cache # before testing and False to force # correction off. None will try and # guess based on your dvipng version#text.hinting : auto # May be one of the following: # &apos;none&apos;: Perform no hinting # &apos;auto&apos;: Use FreeType&apos;s autohinter # &apos;native&apos;: Use the hinting information in the # font file, if available, and if your # FreeType library supports it # &apos;either&apos;: Use the native hinting information, # or the autohinter if none is available. # For backward compatibility, this value may also be # True === &apos;auto&apos; or False === &apos;none&apos;.#text.hinting_factor : 8 # Specifies the amount of softness for hinting in the # horizontal direction. A value of 1 will hint to full # pixels. A value of 2 will hint to half pixels etc.#text.antialiased : True # If True (default), the text will be antialiased. # This only affects the Agg backend.# The following settings allow you to select the fonts in math mode.# They map from a TeX font name to a fontconfig font pattern.# These settings are only used if mathtext.fontset is &apos;custom&apos;.# Note that this &quot;custom&quot; mode is unsupported and may go away in the# future.#mathtext.cal : cursive#mathtext.rm : serif#mathtext.tt : monospace#mathtext.it : serif:italic#mathtext.bf : serif:bold#mathtext.sf : sans#mathtext.fontset : dejavusans # Should be &apos;dejavusans&apos; (default), # &apos;dejavuserif&apos;, &apos;cm&apos; (Computer Modern), &apos;stix&apos;, # &apos;stixsans&apos; or &apos;custom&apos;#mathtext.fallback_to_cm : True # When True, use symbols from the Computer Modern # fonts when a symbol can not be found in one of # the custom math fonts.#mathtext.default : it # The default font to use for math. # Can be any of the LaTeX font names, including # the special name &quot;regular&quot; for the same font # used in regular text.### AXES# default face and edge color, default tick sizes,# default fontsizes for ticklabels, and so on. See# http://matplotlib.org/api/axes_api.html#module-matplotlib.axes#axes.facecolor : white # axes background color#axes.edgecolor : black # axes edge color#axes.linewidth : 0.8 # edge linewidth#axes.grid : False # display grid or not#axes.titlesize : large # fontsize of the axes title#axes.titlepad : 6.0 # pad between axes and title in points#axes.labelsize : medium # fontsize of the x any y labels#axes.labelpad : 4.0 # space between label and axis#axes.labelweight : normal # weight of the x and y labels#axes.labelcolor : black#axes.axisbelow : &apos;line&apos; # draw axis gridlines and ticks below # patches (True); above patches but below # lines (&apos;line&apos;); or above all (False)#axes.formatter.limits : -7, 7 # use scientific notation if log10 # of the axis range is smaller than the # first or larger than the second#axes.formatter.use_locale : False # When True, format tick labels # according to the user&apos;s locale. # For example, use &apos;,&apos; as a decimal # separator in the fr_FR locale.#axes.formatter.use_mathtext : False # When True, use mathtext for scientific # notation.#axes.formatter.useoffset : True # If True, the tick label formatter # will default to labeling ticks relative # to an offset when the data range is # small compared to the minimum absolute # value of the data.#axes.formatter.offset_threshold : 4 # When useoffset is True, the offset # will be used when it can remove # at least this number of significant # digits from tick labels.# axes.spines.left : True # display axis spines# axes.spines.bottom : True# axes.spines.top : True# axes.spines.right : True#axes.unicode_minus : True # use unicode for the minus symbol # rather than hyphen. See # http://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes#axes.prop_cycle : cycler(&apos;color&apos;,# [&apos;1f77b4&apos;, &apos;ff7f0e&apos;, &apos;2ca02c&apos;, &apos;d62728&apos;,# &apos;9467bd&apos;, &apos;8c564b&apos;, &apos;e377c2&apos;, &apos;7f7f7f&apos;,# &apos;bcbd22&apos;, &apos;17becf&apos;]) # color cycle for plot lines # as list of string colorspecs: # single letter, long name, or # web-style hex#axes.autolimit_mode : data # How to scale axes limits to the data. # Use &quot;data&quot; to use data limits, plus some margin # Use &quot;round_number&quot; move to the nearest &quot;round&quot; number#axes.xmargin : .05 # x margin. See `axes.Axes.margins`#axes.ymargin : .05 # y margin See `axes.Axes.margins`#polaraxes.grid : True # display grid on polar axes#axes3d.grid : True # display grid on 3d axes### DATES# These control the default format strings used in AutoDateFormatter.# Any valid format datetime format string can be used (see the python# `datetime` for details). For example using &apos;%%x&apos; will use the locale date representation# &apos;%%X&apos; will use the locale time representation and &apos;%%c&apos; will use the full locale datetime# representation.# These values map to the scales:# &#123;&apos;year&apos;: 365, &apos;month&apos;: 30, &apos;day&apos;: 1, &apos;hour&apos;: 1/24, &apos;minute&apos;: 1 / (24 * 60)&#125;# date.autoformatter.year : %Y# date.autoformatter.month : %Y-%m# date.autoformatter.day : %Y-%m-%d# date.autoformatter.hour : %m-%d %H# date.autoformatter.minute : %d %H:%M# date.autoformatter.second : %H:%M:%S# date.autoformatter.microsecond : %M:%S.%f### TICKS# see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick#xtick.top : False # draw ticks on the top side#xtick.bottom : True # draw ticks on the bottom side#xtick.major.size : 3.5 # major tick size in points#xtick.minor.size : 2 # minor tick size in points#xtick.major.width : 0.8 # major tick width in points#xtick.minor.width : 0.6 # minor tick width in points#xtick.major.pad : 3.5 # distance to major tick label in points#xtick.minor.pad : 3.4 # distance to the minor tick label in points#xtick.color : k # color of the tick labels#xtick.labelsize : medium # fontsize of the tick labels#xtick.direction : out # direction: in, out, or inout#xtick.minor.visible : False # visibility of minor ticks on x-axis#xtick.major.top : True # draw x axis top major ticks#xtick.major.bottom : True # draw x axis bottom major ticks#xtick.minor.top : True # draw x axis top minor ticks#xtick.minor.bottom : True # draw x axis bottom minor ticks#ytick.left : True # draw ticks on the left side#ytick.right : False # draw ticks on the right side#ytick.major.size : 3.5 # major tick size in points#ytick.minor.size : 2 # minor tick size in points#ytick.major.width : 0.8 # major tick width in points#ytick.minor.width : 0.6 # minor tick width in points#ytick.major.pad : 3.5 # distance to major tick label in points#ytick.minor.pad : 3.4 # distance to the minor tick label in points#ytick.color : k # color of the tick labels#ytick.labelsize : medium # fontsize of the tick labels#ytick.direction : out # direction: in, out, or inout#ytick.minor.visible : False # visibility of minor ticks on y-axis#ytick.major.left : True # draw y axis left major ticks#ytick.major.right : True # draw y axis right major ticks#ytick.minor.left : True # draw y axis left minor ticks#ytick.minor.right : True # draw y axis right minor ticks### GRIDS#grid.color : b0b0b0 # grid color#grid.linestyle : - # solid#grid.linewidth : 0.8 # in points#grid.alpha : 1.0 # transparency, between 0.0 and 1.0### Legend#legend.loc : best#legend.frameon : True # if True, draw the legend on a background patch#legend.framealpha : 0.8 # legend patch transparency#legend.facecolor : inherit # inherit from axes.facecolor; or color spec#legend.edgecolor : 0.8 # background patch boundary color#legend.fancybox : True # if True, use a rounded box for the # legend background, else a rectangle#legend.shadow : False # if True, give background a shadow effect#legend.numpoints : 1 # the number of marker points in the legend line#legend.scatterpoints : 1 # number of scatter points#legend.markerscale : 1.0 # the relative size of legend markers vs. original#legend.fontsize : medium# Dimensions as fraction of fontsize:#legend.borderpad : 0.4 # border whitespace#legend.labelspacing : 0.5 # the vertical space between the legend entries#legend.handlelength : 2.0 # the length of the legend lines#legend.handleheight : 0.7 # the height of the legend handle#legend.handletextpad : 0.8 # the space between the legend line and legend text#legend.borderaxespad : 0.5 # the border between the axes and legend edge#legend.columnspacing : 2.0 # column separation### FIGURE# See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure#figure.titlesize : large # size of the figure title (Figure.suptitle())#figure.titleweight : normal # weight of the figure title#figure.figsize : 6.4, 4.8 # figure size in inches#figure.dpi : 100 # figure dots per inch#figure.facecolor : white # figure facecolor; 0.75 is scalar gray#figure.edgecolor : white # figure edgecolor#figure.autolayout : False # When True, automatically adjust subplot # parameters to make the plot fit the figure#figure.max_open_warning : 20 # The maximum number of figures to open through # the pyplot interface before emitting a warning. # If less than one this feature is disabled.# The figure subplot parameters. All dimensions are a fraction of the#figure.subplot.left : 0.125 # the left side of the subplots of the figure#figure.subplot.right : 0.9 # the right side of the subplots of the figure#figure.subplot.bottom : 0.11 # the bottom of the subplots of the figure#figure.subplot.top : 0.88 # the top of the subplots of the figure#figure.subplot.wspace : 0.2 # the amount of width reserved for blank space between subplots, # expressed as a fraction of the average axis width#figure.subplot.hspace : 0.2 # the amount of height reserved for white space between subplots, # expressed as a fraction of the average axis height### IMAGES#image.aspect : equal # equal | auto | a number#image.interpolation : nearest # see help(imshow) for options#image.cmap : viridis # A colormap name, gray etc...#image.lut : 256 # the size of the colormap lookup table#image.origin : upper # lower | upper#image.resample : True#image.composite_image : True # When True, all the images on a set of axes are # combined into a single composite image before # saving a figure as a vector graphics file, # such as a PDF.### CONTOUR PLOTS#contour.negative_linestyle : dashed # dashed | solid#contour.corner_mask : True # True | False | legacy### ERRORBAR PLOTS#errorbar.capsize : 0 # length of end cap on error bars in pixels### HISTOGRAM PLOTS#hist.bins : 10 # The default number of histogram bins. # If Numpy 1.11 or later is # installed, may also be `auto`### SCATTER PLOTS#scatter.marker : o # The default marker type for scatter plots.### Agg rendering### Warning: experimental, 2008/10/10#agg.path.chunksize : 0 # 0 to disable; values in the range # 10000 to 100000 can improve speed slightly # and prevent an Agg rendering failure # when plotting very large data sets, # especially if they are very gappy. # It may cause minor artifacts, though. # A value of 20000 is probably a good # starting point.### SAVING FIGURES#path.simplify : True # When True, simplify paths by removing &quot;invisible&quot; # points to reduce file size and increase rendering # speed#path.simplify_threshold : 0.1 # The threshold of similarity below which # vertices will be removed in the simplification # process#path.snap : True # When True, rectilinear axis-aligned paths will be snapped to # the nearest pixel when certain criteria are met. When False, # paths will never be snapped.#path.sketch : None # May be none, or a 3-tuple of the form (scale, length, # randomness). # *scale* is the amplitude of the wiggle # perpendicular to the line (in pixels). *length* # is the length of the wiggle along the line (in # pixels). *randomness* is the factor by which # the length is randomly scaled.# the default savefig params can be different from the display params# e.g., you may want a higher resolution, or to make the figure# background white#savefig.dpi : figure # figure dots per inch or &apos;figure&apos;#savefig.facecolor : white # figure facecolor when saving#savefig.edgecolor : white # figure edgecolor when saving#savefig.format : png # png, ps, pdf, svg#savefig.bbox : standard # &apos;tight&apos; or &apos;standard&apos;. # &apos;tight&apos; is incompatible with pipe-based animation # backends but will workd with temporary file based ones: # e.g. setting animation.writer to ffmpeg will not work, # use ffmpeg_file instead#savefig.pad_inches : 0.1 # Padding to be used when bbox is set to &apos;tight&apos;#savefig.jpeg_quality: 95 # when a jpeg is saved, the default quality parameter.#savefig.directory : ~ # default directory in savefig dialog box, # leave empty to always use current working directory#savefig.transparent : False # setting that controls whether figures are saved with a # transparent background by default# tk backend params#tk.window_focus : False # Maintain shell focus for TkAgg# ps backend params#ps.papersize : letter # auto, letter, legal, ledger, A0-A10, B0-B10#ps.useafm : False # use of afm fonts, results in small files#ps.usedistiller : False # can be: None, ghostscript or xpdf # Experimental: may produce smaller files. # xpdf intended for production of publication quality files, # but requires ghostscript, xpdf and ps2eps#ps.distiller.res : 6000 # dpi#ps.fonttype : 3 # Output Type 3 (Type3) or Type 42 (TrueType)# pdf backend params#pdf.compression : 6 # integer from 0 to 9 # 0 disables compression (good for debugging)#pdf.fonttype : 3 # Output Type 3 (Type3) or Type 42 (TrueType)# svg backend params#svg.image_inline : True # write raster image data directly into the svg file#svg.fonttype : &apos;path&apos; # How to handle SVG fonts:# &apos;none&apos;: Assume fonts are installed on the machine where the SVG will be viewed.# &apos;path&apos;: Embed characters as paths -- supported by most SVG renderers# &apos;svgfont&apos;: Embed characters as SVG fonts -- supported only by Chrome,# Opera and Safari#svg.hashsalt : None # if not None, use this string as hash salt # instead of uuid4# docstring params#docstring.hardcopy = False # set this when you want to generate hardcopy docstring# Set the verbose flags. This controls how much information# matplotlib gives you at runtime and where it goes. The verbosity# levels are: silent, helpful, debug, debug-annoying. Any level is# inclusive of all the levels below it. If your setting is &quot;debug&quot;,# you&apos;ll get all the debug and helpful messages. When submitting# problems to the mailing-list, please set verbose to &quot;helpful&quot; or &quot;debug&quot;# and paste the output into your report.## The &quot;fileo&quot; gives the destination for any calls to verbose.report.# These objects can a filename, or a filehandle like sys.stdout.## You can override the rc default verbosity from the command line by# giving the flags --verbose-LEVEL where LEVEL is one of the legal# levels, e.g., --verbose-helpful.## You can access the verbose instance in your code# from matplotlib import verbose.#verbose.level : silent # one of silent, helpful, debug, debug-annoying#verbose.fileo : sys.stdout # a log filename, sys.stdout or sys.stderr# Event keys to interact with figures/plots via keyboard.# Customize these settings according to your needs.# Leave the field(s) empty if you don&apos;t need a key-map. (i.e., fullscreen : &apos;&apos;)#keymap.fullscreen : f, ctrl+f # toggling#keymap.home : h, r, home # home or reset mnemonic#keymap.back : left, c, backspace # forward / backward keys to enable#keymap.forward : right, v # left handed quick navigation#keymap.pan : p # pan mnemonic#keymap.zoom : o # zoom mnemonic#keymap.save : s # saving current figure#keymap.quit : ctrl+w, cmd+w # close the current figure#keymap.grid : g # switching on/off a grid in current axes#keymap.yscale : l # toggle scaling of y-axes (&apos;log&apos;/&apos;linear&apos;)#keymap.xscale : L, k # toggle scaling of x-axes (&apos;log&apos;/&apos;linear&apos;)#keymap.all_axes : a # enable all axes# Control location of examples data files#examples.directory : &apos;&apos; # directory to look in for custom installation###ANIMATION settings#animation.html : &apos;none&apos; # How to display the animation as HTML in # the IPython notebook. &apos;html5&apos; uses # HTML5 video tag.#animation.writer : ffmpeg # MovieWriter &apos;backend&apos; to use#animation.codec : h264 # Codec to use for writing movie#animation.bitrate: -1 # Controls size/quality tradeoff for movie. # -1 implies let utility auto-determine#animation.frame_format: &apos;png&apos; # Controls frame format used by temp files#animation.ffmpeg_path: &apos;ffmpeg&apos; # Path to ffmpeg binary. Without full path # $PATH is searched#animation.ffmpeg_args: &apos;&apos; # Additional arguments to pass to ffmpeg#animation.avconv_path: &apos;avconv&apos; # Path to avconv binary. Without full path # $PATH is searched#animation.avconv_args: &apos;&apos; # Additional arguments to pass to avconv#animation.mencoder_path: &apos;mencoder&apos; # Path to mencoder binary. Without full path # $PATH is searched#animation.mencoder_args: &apos;&apos; # Additional arguments to pass to mencoder#animation.convert_path: &apos;convert&apos; # Path to ImageMagick&apos;s convert binary. # On Windows use the full path since convert # is also the name of a system tool.]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python数据处理笔记matplotlib篇（一）]]></title>
    <url>%2F2017%2F09%2F01%2FPython%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AC%94%E8%AE%B0matplotlib%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关键词：坐标轴范围，图像保存，坐标轴密度，axes自适应figure，matplotlib面向对象，部分理论概念 简单的小例子 123456789101112import matplotlib.pyplot as plt path = ""plt.plot([4,7,1,9,4]) #绘图，如果只有一个list默认其为Y轴，X轴数据为其索引值plt.ylabel("grade")plt.axis([-2,8,0,12]) #axis函数接收一个list，设定横纵坐标尺度，list各个参数分别代表[X初始刻度，X终止刻度，Y起始刻度，Y终止 刻]plt.savefig(path,dpi = 600) #savefig函数用来保存图片至path地址，dpi值表示每英寸具有的像素点数plt.show()------这个例子的关键词：坐标轴尺度、图像保存 plt.plot()简介： 1234567891011plt.plot(x, y, format_string, **kwargs) #这个函数是绘图的关键函数 #x ： X轴数据，列表或数组，可选 #y ： Y轴数据，列表或数组 #format_string ： 控制曲线的格式字符串，可选 #**kwargs ：第二组或更多(x,y,format_string)其中要说明的是format_string，包含的主要类型有颜色字符：'b','k'等风格字符：'-','--'等标记字符：每个数据点的标志方式,'.','*','o'等还要很多其他的参数值，到时候查文档 如何处理坐标轴的密度： 1234567891011121314#设置密度之前，需要知道关于axis的一些内容------class matplotlib.axis.XAxis(axes, pickradius=15)Init the axis with the parent Axes instance------class matplotlib.axis.YAxis(axes, pickradius=15)Init the axis with the parent Axes instance------需要用父类Axes的实例对matplot.axis.XAxis进行初始化为一个axis实例(xaxis和yaxis都是axis的子类)令axis实例为axes_xaxisfig,ax = plt.subplots()axes_xaxis = matplotlib.axis.XAxis(ax)#ax是matplotlib.axes.Axes的一个实例现在axes_xaxis就是一个Axis(XAxis)的实例 此处见过好多直接ax.xaxis.set_major……的使用方法，我的理解是，ax是一个父类的实例，可以直接调用任何的关于matplotlib.axis下的东西。有待考证(可用度不高，测试过，有的可，有的不可) 得出一个结论，能用plt就用plt，尽量不使用axes 12345678910111213141516#方法一：设置间隔法axes_xaxis.set_major_locator(matplotlib.ticker.MultipleLocator(5))#5代表每隔5个------ #也可以不进行实例化，直接使用如下的方式 ax.xaxis.set_major_locator(matplotlib.ticker.MultipleLocator(5))------#方法二：自动线性调整ax.xaxis.set_major_locator(ticker.LinearLocator(numticks=None, presets=None))------ 文档里LinearLocator的介绍 class matplotlib.ticker.LinearLocator(numticks=None, presets=None) Bases: matplotlib.ticker.Locator Determine the tick locations The first time this function is called it will try to set the number of ticks to make a nice tick partitioning. Thereafter the number of ticks will be fixed so that interactive navigation will be nice 第一次调用的时候就会根据坐标轴的大小，自动的给设置好留几个tick_label合适------ 关键词：坐标轴，密度 axes自动填充满figure 12mpl.rc('figure',autolayout = True)#autolyout使axes自适应整个figure框 如何令图片文件名称与title一致 1234#首先设定了title的内容ax.set_title('一程山路')#然后保存图片是，图片的名称是这个即可plt.savefig('%s.png'%(ax.get_title()),dpi = 300)#其中ax.get_title()即获取title NOTICE:当使用了twinx()之后，尽量使用如下方式实现图片的保存 12fig,ax = plt.subplots()fig.savefig(path,**kwargs)#使用fig实例进行保存操作 #####关于matplotlib的面向对象 1matplotlib.pyplot.subplots(nrows=1, ncols=1, sharex=False, sharey=False, squeeze=True, subplot_kw=None, gridspec_kw=None, **fig_kw) 上面这个函数有两个返回值，他们分别如下： 12fig : matplotlib.figure.Figure objectax : matplotlib.axes.Axes object or array of Axes objects. 他们的关系由下图初见端倪：（fig是一个大面板，ax是这个面板上的区域，fig是由ax和其他一些东西组成的） 这两个类分别如下： 123456class matplotlib.figure.Figure(figsize=None, dpi=None, facecolor=None, edgecolor=None, linewidth=0.0, frameon=None, subplotpars=None, tight_layout=None)------Figure：这个类的实例有很多的方法，如：add_axes(*args, **kwargs)#添加一个axes，返回值是一个Axes实例add_subplot(*args, **kwargs)#添加一个若干个axes，并返回一个Axes实例数组------ 12345678class matplotlib.axes.Axes(fig, rect, facecolor=None, frameon=True, sharex=None, sharey=None, label='', xscale=None, yscale=None, axisbg=None, **kwargs)------Axes:这个类的方法有：plot(*args,**kwargs)#实例使用此方法即能绘制图像,并且十分强大scatter(*args,**kwargs)还有与pyplot中一一对应的方法：plt.xlabel()--&gt;ax.set_xlabel()&amp;ax.get_xlabel()#具体查文档------ 所以，小例子： 1234fig,ax = matplotlib.pyplot.subplots()fig.set_size_inches((w,h))ax.plot(x,y)ax.set_xlabel("hello") 如何移轴123456789ax.spines['bottom'].set_position('center')将地轴移到中间ax.spines['right'].set_visible(False)ax.spines['top'].set_visible(False)把这些边框去掉ax1.yaxis.set_ticks_position('left')ax1.xaxis.set_ticks_position('bottom')把tick移轴 例子： 12345678910111213141516import matplotlib.pyplot as pltimport numpy as npx = np.linspace(0,8*np.pi,1000)y = np.sin(x)y1 = (x-x)fig,ax = plt.subplots()ax.spines['right'].set_visible(False)ax.spines['top'].set_visible(False)ax.spines['bottom'].set_position('center')ax.yaxis.set_ticks_position('left')ax.xaxis.set_ticks_position('bottom')ax.plot(x,y,x,y1)fig.set_size_inches((8,2.5))plt.show() 添加注释12345678910111213141516171819202122232425262728import matplotlib.pyplot as pltimport numpy as npimport matplotlib as mplmpl.rcParams['font.family'] = 'STFangsong'x = np.linspace(0,8*np.pi,1000)y = np.sin(x)y1 = (x-x)fig,ax = plt.subplots()ax.spines['right'].set_visible(False)ax.spines['top'].set_visible(False)ax.spines['bottom'].set_position('center')ax.yaxis.set_ticks_position('left')ax.xaxis.set_ticks_position('bottom')# bagua = [乾兑离震巽坎艮坤]------bagua = ['乾','坤','兑','艮','离','坎','震','巽']for i in range(8): if i%2 == 0: ax.annotate(bagua[i],(i*np.pi+np.pi/2-0.5,0.5),(i*np.pi+np.pi/2-0.4,0.5)) else: ax.annotate(bagua[i],(i*np.pi+np.pi/2-0.5,-0.5),(i*np.pi+np.pi/2-0.4,-0.5))------ax.plot(x,y,x,y1)fig.set_size_inches((8,2.5))plt.show() ###理论概念 绘图区域设置 绘图区域概念如下： 在matplotlib中，一个独立的图像（不管有多少小图像）是一个Figure对象，一个Figure对象中可以包含一个或者多个Axes对象，每个Axes对象都是一个拥有自己独立坐标系统的绘图区域，如下： 因此，可以在全局绘图区域中创建一个分区体系，并定位到一个子绘图区域 1234plt.subplot(nrows,ncols,plot_number)#区域分为nrows行，ncols列，现在绘制第plot_number个子图plt.subplot(3,2,4)#3行2列，选择第4个绘图区域，然后再使用plt.plot(参数)即可进行绘图了 一个Figure对应一张图片。Title为标题。Axis为坐标轴，Label为坐标轴标注。Tick为刻度线，Tick Label为刻度注释。]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git 学习手册精简版不断更新]]></title>
    <url>%2F2017%2F04%2F17%2Fgit%20%E5%AD%A6%E4%B9%A0%E6%89%8B%E5%86%8C%E7%B2%BE%E7%AE%80%E7%89%88%EF%BC%88%E5%82%BB%E7%93%9C%E7%89%88%EF%BC%89%2F</url>
    <content type="text"><![CDATA[git上是现在十分常用的版本控制工具，GitHub作为其代码的托管中心。 基本操作第一步：首先要进入GitHub注册一下，并记住自己的用户名，邮箱和密码 第二步：找一个空白的文件夹，打开命令行窗口cd 到此目录下（具体的操作方法见http://blog.csdn.net/cdqn10086/article/details/53978825） 进行自报家门的操作 12git config --global user.name YourNamegit config --global user.email YourEmail 建立要进行版本控制的操作（建立一个文件夹，一切操作在其中进行） 1234mkdir demo01 %建立文件夹名字为demo01cd demo01 %进入此文件夹git init %进行init，将这个目录变成git管理的仓库进行完此项之后，会在demo01文件夹内有一个.git文件，要用ls -ah来查看隐藏文件。 对里面的文件进行操作（新建一个文本文档demo01.txt，并输入几句英文） 12git add demo01.txtgit commit -m &quot;this is the first demo&quot; ###远程仓库（GitHub） 第一步：获取SSH（打开命令行，进行如下操作） 1$ ssh-keygen -t rsa -C YourEmail 进行此命令之后，我们就可以找到文件夹.ssh ，因为.ssh文件件在主目录下，因此可以直接如下方式打开 1$ open ~/.ssh 第二步：找到我们需要的两个文件，id_rsa （私人秘钥，万勿泄露）和id_rsa.pub（公钥），然后登陆GitHub，找到Account settings中的SSH Keys，新建sshkey，title写一个平时常用的名字即可，key里面输入我们公钥里的所有的内容。 第三步：在GitHub的个人页处新添加一个仓库(我们新建的仓库名字就是demo01) 本地库关联远程库 第四步：为了让本地的与远程的同步，我们在本地的demo01仓库下运行如下的命令 12git init #初始化，如果上一步完成了这一步就不用了git remote add origin https://github.com/用户名/demo01.git (此时我们的远程库就叫做名字origin) 使用如下将本地库推送到远程库 1git push -u origin master 现在也就是完成了本地库的提交，以后，只要是有了新的改动，本地做了提交，都可以通过如下命令来进行把本地的master分支推送到GitHub。 1git push origin master 远程库克隆到本地 首先，要在GitHub上建立一个远程仓库并且生成readme.txt文件 然后，在选择你要保存的一个目录，在此目录下进行如下克隆 1git clone https://github.com/LiErhua（GitHub用户名）/demo02.git 然后会发现已经克隆到自己的硬盘本地了。 notice： 其中我们push和clone时，地址都是有两种选择的，一种是SSH，一种是http协议的分别如下 12git@github.com:你的GitHub用户名/文件夹名称.githttps://github.com/用户名/文件夹名称.git]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之段落]]></title>
    <url>%2F2017%2F03%2F17%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AE%B5%E8%90%BD%2F</url>
    <content type="text"><![CDATA[关键词：段落 这一节，我们讨论段落，段落是几乎所有文档必备的，因此段落的设置是十分重要的。 段落格式属性： 段落首行缩进 命令 作用 \parindent 由\setlength命令控制的段落首行固定缩进 \noindent 某段开头临时禁用缩进 \indent 某段开头临时缩进 段落属性 命令 备注 段落间垂直距离 \parskip 由\setlength设置其大小 段落对齐方式（两端均匀对齐） 默认 段落对齐方式（左对齐） \raggedright 声明式命令 段落对齐方式（右对齐） \raggedleft 声明式命令，排版签名日期格言 段落对齐方式（居中对齐） \centering 声明式命令 段落属性 环境 备注 段落对齐方式（左对齐） \begin{flushleft}\end{flushleft} 增加段前后垂直距离 段落对齐方式（右对齐） \begin{flushright}\end{flashright} 增加段前后垂直距离 段落对齐方式（居中对齐） \begin{center}\end{center} 增加段前后垂直距离 两个段落相关的有趣宏包： 12345678910lettrine 宏包 会产生段落首字母大写下沉效果---使用方法\usepackage&#123;lettrine&#125;\lettrine&#123;首字母&#125;&#123;本单词首字母剩下的单词&#125; + 其他---shapepar 宏包 方便排版特定形状的段落---使用方法\usepackage&#123;shapepar&#125;\heartpar&#123;要排版的段落&#125;--- 12345678\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;shapepar&#125;\usepackage&#123;lettrine&#125;\begin&#123;document&#125;\lettrine&#123;W&#125;&#123;here&#125; there is a will, there is a way. No Man Is An Island ——John Donn No man is an island, entire of itself; every man is a piece of the continent, a part of the main; \starpar&#123;锦瑟无端五十弦，一弦一柱思华年，庄生晓梦迷蝴蝶，望帝春深托杜鹃，沧海月明珠有泪，蓝田日暖玉生烟，此情可待成追忆，只是当时已惘然。&#125;\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>段落</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之字号、水平间距与垂直间距]]></title>
    <url>%2F2017%2F03%2F16%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E5%AD%97%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[关键词：字号,水平间距,垂直间距 这一节，我们讨论字号的大小，单位是pt，pt单位是英寸的 1/72 大小，水平间距与垂直间距 首先我们明确，在LaTeX中，行距和字号是直接相关的，设置字号是，同时会默认设置基本行距（一行文字的基线到下行文字的基线距离）为文字大小的1.2倍. 字号的普通的声明式命令英文字号注意：字号命令表示的尺寸和行间距随文档类和其他因素影响，因此并不能准确的表示字号的大小 123\tiny \scriptszie \footnotesize \small \normalsize \large \Large \LARGE\huge \Huge 1234567\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;&#123;\tiny 夜雨秋灯&#125; &#123;\scriptsize 夜雨秋灯&#125; &#123;\footnotesize 夜雨秋灯&#125; &#123;\small 夜雨秋灯&#125;\par夜雨秋灯 &#123;\large 夜雨秋灯&#125; &#123;\Large 夜雨秋灯&#125; &#123;\LARGE 夜雨秋灯&#125;\par&#123;\huge 夜雨秋灯&#125; &#123;\Huge 夜雨秋灯&#125;\end&#123;document&#125; 链接：pt与中国字号的关系 中文字号：中文字号的表示，在我们使用了ctex文档类，或者使用了ctex宏包之后就默认包含了，如下形式： 1234\zihao&#123;1&#125;\zihao&#123;-1&#125;\zihao&#123;3&#125;\zihao&#123;-3&#125; 12345678\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\zihao&#123;1&#125; 夜雨秋灯\par \zihao&#123;-1&#125;夜雨秋灯\par\zihao&#123;3&#125;夜雨秋灯\par\zihao&#123;-3&#125;夜雨秋灯\par \end&#123;document&#125; 竖直间距的设定基本行距的设置：中英都使用命令 \linespread{factor} （此命令的生效范围是在\selectfont命令之后） 其中factor指的是基本行距的倍数因子，默认基本行距为文字大小的1.2倍 默认的英文因子是1，默认的中文因子是1.3 即默认条件下，英文的行距是字号的1.2 X 1 = 1.2倍；中文行距是字号的 1.3 X1.2 = 1.56 倍 宏包：setspace 宏包 垂直间距：（实验失败，不知原因） 命令 作用 \vspace{长度} 生成垂直方向间距为“长度”的空白，但是有个大毛病 \vspace*{长度} 生成垂直方向间距为“长度”的空白 \vfill = \vspace{fill} 垂直方向上分散均匀排列 notice：其中长度参数可以是\parskip,\itemsep,\smallskip,\medskip,\bigskip等 以下比较以下\vspace{}与\vskip 长度 的异同 12345678910\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;blindtext&#125;\begin&#123;document&#125;锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪\vskip 1cm锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪\vspace*&#123;1cm&#125;锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪\end&#123;document&#125; 可以明显的看出，\vspace必须将上一行补全才可以使用。所以建议使用\vskip 参考链接：\vskip 与 \vspace 的关系 水平间距的设定先介绍几个常用的LaTeX单位： 单位 中文 大小 备注 pt 磅 1/72英寸 in 英寸 2.54cm em 全身 字号对应的长度 大小等于\quad，大写M的宽度 ex 本意是小写字母 x 的高度 \quad 1em \qquad 2em \hspace{长度} 生成水平方向大小为“长度”的空白间距（每行的起始处不生效，不会产生缩进效果） \hspace*{长度} 生成水平方向大小为“长度”的空白间距（每行的起始处生效，产生缩进效果） \hfill = \hspace{fill} 水平方向上分散均匀排列 例子 12345678910\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;showframe&#125;\begin&#123;document&#125;\setlength&#123;\parindent&#125;&#123;0em&#125;锦瑟无端五十弦\quad 一弦一柱思华年\par庄生晓梦迷蝴蝶\qquad 望帝春深托杜鹃\par沧海月明珠有泪\hspace&#123;3cm&#125;蓝田日暖玉生烟\par此情可待\hfill 成追忆\hfill 只是当时\hfill 已惘然\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>字号</tag>
        <tag>水平间距</tag>
        <tag>垂直间距</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之正文环境（一）————文本环境]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AD%A3%E6%96%87%E7%8E%AF%E5%A2%83%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E6%96%87%E6%9C%AC%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[关键词：文本环境，引用环境，诗词环境，摘要环境 这一节，我们讨论文本环境 12345678引用环境\begin&#123;quote&#125;首行无缩进的引用内容\end&#123;quote&#125;---\begin&#123;quotation&#125;首行缩进的应用内容\end&#123;quotation&#125; 1234诗歌环境\begin&#123;verse&#125;以\\换行\end&#123;verse&#125; 1234摘要环境\begin&#123;abstract&#125;摘要内容\end&#123;abstract&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>文本环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之盒子]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E7%9B%92%E5%AD%90%2F</url>
    <content type="text"><![CDATA[关键词：盒子 这一节，我们讨论盒子，盒子是一个不太好理解的概念，这里，我们可以暂时这么理解： 盒子（box）是LaTeX中的基本的单元了，一个文字，一张图，一张表，一个页面等都可以称作一个盒子 小盒子再构成大盒子，最终成为文章的整体。 水平盒子水平盒子无法在其中进行段落的划分，即无法分行分段 不带边框的盒子12\mbox&#123;文本内容&#125;\makebox[宽度][位置(clrs)]&#123;内容&#125; 带边框的盒子12\fbox&#123;文本&#125;\framebox[宽度][位置]&#123;文本&#125; 垂直盒子垂直盒子就可以有多个段落 垂直盒子命令有两种形式：命令\parbox{宽度}{盒子内容} 与 环境\begin{minipage}{宽度}…… 1234567精简版命令格式\parbox&#123;宽度(一般用0.48\textwidth 的形式表示)&#125;&#123;盒子内容&#125;------精简版环境格式\begin&#123;minipage&#125;&#123;宽度(一般用0.48\textwidth 的形式表示)&#125;%表示这个盒子宽度是\textwidth的0.48倍盒子内容\end&#123;minipage&#125; NOTICE: 宽度参数必须有，表示内容的宽度，超出这个宽度自动换行 12345678910111213\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\parbox&#123;0.6\textwidth&#125;&#123; 锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪 锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪&#125;\vskip 1cm\begin&#123;minipage&#125;&#123;0.45\linewidth&#125; 锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪 锦瑟无端五十弦一弦一柱思华年庄生晓梦迷蝴蝶望帝春深托杜鹃，沧海月明珠有泪\end&#123;minipage&#125;\end&#123;document&#125; 12\raisebox&#123;距离&#125;&#123;内容&#125;这个盒子的是用来控制上下的，距离正表示往上走，距离负表示往下走 1234567\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;T\hspace&#123;-0.5em&#125;\raisebox&#123;-0.2em&#125;&#123;E&#125;\hspace&#123;-0.5em&#125;X\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>盒子</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之正文环境（三）———— 定理环境]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AD%A3%E6%96%87%E7%8E%AF%E5%A2%83%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94%E2%80%94%E2%80%94-%E5%AE%9A%E7%90%86%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[关键词：定理环境 这一节，我们讨论定理环境 定理环境其实在我们正式的论文写作中用的并不是太多 12345\newtheorem&#123;theory&#125;&#123;定理&#125;上面这个放置在导言区，命令声明了定理环境，两个参数，前者是新定义的环境名称，后者是显示在文档内的输出标题名字\begin&#123;theory&#125;[可选的二标题]定理内容\end&#123;theory&#125; 同样需要定制样式时，我们需要使用宏包 theorem，几个比较重要的 12345\usepackage&#123;theorem&#125;\theorembodyfont&#123;字体&#125;设置定理内容字体,字体最好预先定义好\theoremheaderfont&#123;字体&#125;设置定理头字体,字体最好预先定义好\theorempreskipamount 定理前垂直距离变量，使用\setlength来设置\theorempostskipamount 定理后垂直距离变量 123456789101112131415161718192021222324\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;theorem&#125;\usepackage&#123;fontspec&#125;\newCJKfontfamily\qingsong[ItalicFont = FZQKBYSJW--GB1-0,BoldFont = FZQKBYSJW--GB1-0]&#123;FZQKBYSJW--GB1-0&#125;\newCJKfontfamily\fs[ItalicFont = STFangsong,BoldFont = STFangsong]&#123;STFangsong&#125;\newtheorem&#123;theory&#125;&#123;夜雨秋灯&#125;\theorembodyfont&#123;\fs&#125;%设置定理内容字体\theoremheaderfont&#123;\qingsong&#125;%设置定理头字体\setlength&#123;\theorempreskipamount&#125;&#123;0.2cm&#125; %定理前垂直距离变量\setlength&#123;\theorempostskipamount&#125;&#123;0cm&#125; %定理后垂直距离变量\begin&#123;document&#125;\noindent&#123;\qingsong 夜雨秋灯&#125;\qquad&#123;\fs 两点之间，线段最短&#125;\\\vskip 1cm\begin&#123;theory&#125;两点之间，线段最短\end&#123;theory&#125;\begin&#123;theory&#125;同位角相等\end&#123;theory&#125;\begin&#123;theory&#125;三角形两边之和大于第三边\end&#123;theory&#125;\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>文本环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之正文环境（四）———— 抄录命令与环境]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AD%A3%E6%96%87%E7%8E%AF%E5%A2%83%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94%E2%80%94%E2%80%94-%E6%8A%84%E5%BD%95%E5%91%BD%E4%BB%A4%E4%B8%8E%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[关键词：抄录 这一节，我们讨论抄录，抄录分为命令和环境。 命令： 123\verb 命令用来表示行文中的抄录\verb&lt;label&gt;内容&lt;label&gt;,两个label之间的内容将原样输出，label可以是任何相同的符号\verb* 形式可以是输出的空格可见 12345\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\Large&#123;\verb- &amp;%^%^%^&amp;%$% -&#125;\end&#123;document&#125; 环境： 要是需要抄录的内容太多，就必须使用环境了 12\begin&#123;verbatim&#125;%verbatim*同样可以输出空格\end&#123;verbatim&#125; 宏包fancyvrb提供了一系列的verbatim的扩展，可以修改多种内容，可以看查看其宏包文档Zandt]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>抄录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之正文环境（二）———— 列表环境]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AD%A3%E6%96%87%E7%8E%AF%E5%A2%83%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%88%97%E8%A1%A8%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[关键词：列表环境，enumerate，itemize，description 这一节，我们讨论列表环境 123enumerate 环境带计数器itemize 环境不带计数器description 环境有强制使用的可选参数作为关键字 12345678910111213141516\documentclass&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;enumerate&#125;\item one\item two\end&#123;enumerate&#125;\begin&#123;itemize&#125;\item three\item four\end&#123;itemize&#125;\begin&#123;description&#125;\item[five] five is 5\item[six] six is 6\end&#123;description&#125;\end&#123;document&#125; 列表的定制十分繁琐，因此有兴趣的可以去看他们的宏包]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>文本环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之正文环境（五）———— 代码环境]]></title>
    <url>%2F2017%2F03%2F15%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%AD%A3%E6%96%87%E7%8E%AF%E5%A2%83%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E2%80%94%E2%80%94-%E4%BB%A3%E7%A0%81%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[关键词：抄录 这一节，我们讨论抄录，抄录分为命令和环境。使用宏包listings，对应的环境为lstlisting 123\usepackage&#123;listings&#125;%使用宏包\end&#123;lstlisting&#125;%开始环境\begin&#123;lstlisting&#125;[language = Python] 12345678910\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;listings&#125;\begin&#123;document&#125;\begin&#123;lstlisting&#125;[language = Python]import matplotlib as mplmpl.rcParams[&apos;lines.linewidth&apos;] = 2 #类字典格式，键值对mpl.rcParams[&apos;lines.color&apos;] = &apos;r&apos;\end&#123;lstlisting&#125;\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>代码环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之文字强调]]></title>
    <url>%2F2017%2F03%2F13%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%96%87%E5%AD%97%E5%BC%BA%E8%B0%83%2F</url>
    <content type="text"><![CDATA[关键词：文字强调 在文章中，我们有时需要对某几句话或者几个字进行重点的强调 基本的强调形式一般分为：斜体，加粗，下划线 分别对应：\emph{文字}，\textbf{文字}，\underline{文字} 12345678\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;fontspec&#125;\newCJKfontfamily\qingsong&#123;FZQKBYSJW--GB1-0&#125;\begin&#123;document&#125;锦瑟无端五十弦，&#123;\qingsong 一弦一柱思华年&#125;\\\underline&#123;庄生晓梦迷蝴蝶&#125;，\emph&#123;望帝春深托杜鹃&#125;\end&#123;document&#125; 推荐使用如下两个宏包来进行着重处理： 1.英文环境宏包：\ulem 12345678910\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;ulem&#125;\begin&#123;document&#125;\uline&#123;hello&#125;\uuline&#123;hello&#125;\uwave&#123;hello&#125;\sout&#123;hello&#125;\end&#123;document&#125;%除此之外，还提供了许多其他的着重形式 2.中文环境宏包：\CJKfntef 123456789\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;CJKfntef&#125;\begin&#123;document&#125;\CJKunderline&#123;测试&#125;\CJKunderdot&#123;测试&#125;\CJKunderwave&#123;测试&#125;\CJKsout&#123;测试&#125;\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>文字强调</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之字体族]]></title>
    <url>%2F2017%2F03%2F12%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E5%AD%97%E4%BD%93%2F</url>
    <content type="text"><![CDATA[关键词：字体，字体族（font family），字体形状（font shape），字体系列（font series） 我们生活中所见到的大多数物体，都有一个属性，那就是结构，那结构是什么呢？基本上我们可以认为结构包括三部分：形状，材料，尺寸。 我们用于排版的字体，同样有结构，他们的结构又包含什么呢？字体的类型（宋体，隶书），字体的正体斜体，字体的粗细，字体的大小等。这几个性质也离不开我们所说的结构，因为他们同属于形状和尺寸范畴。 但是，字体因为是一个系列体，因此他可以有更加详细的划分，我们一般从这几个角度去讨论他们： 字体族（font family）：对应一组风格相似，适用于一起使用的成套字体，如罗马字体族，无衬线字体族等 字体形状（font shape）：斜体，直立，小型大写等 字体系列（font series）：中等，加宽加粗等 但是对于中文，没有太多的变体，因此，我们一般使用字体族来区分（宋体，隶书等）。 因此，中文字体的选择与西文字体是分离的，这个要注意 ctex 宏包及其文档类（如ctexart）另外新定义了一些组合字体，可以让中文拥有如同西文一样使用粗体（\bfseries)和意大利体（\itshape) 的功能，并且重新定义了 \rmfamily 使他同时对中文其作用。 这样就默认了中文的字体组为rm，正常字体是宋体，粗体是黑体，意大利体是楷体，符合我们平时使用的习惯。 1234\documentclass[]&#123;ctexart&#125;\begin&#123;document&#125;我是一个人(宋体)，\textbf&#123;你呢（黑体）？&#125;\textit&#123;不是吧，是汪（楷体）！&#125;\end&#123;document&#125; 中文的字体族，在ctex宏包及其文档类下进行了一部分预定义，在win下配置了四种字体族，并提供了如下的简化命令来进行使用 12345\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;&#123;\songti 我是宋体&#125;,&#123;\heiti 我是黑体&#125;,&#123;\fangsong 我是仿宋&#125;,&#123;\kaishu 我是楷体&#125;。\end&#123;document&#125; 基本字体设置但是上面的设置还是太落后了，因此，我们现在使用XeLaTeX。使用 fontspec 宏包来调用字体 对于英文：设置正文罗马字体族，无衬线字体族和打字机字体族 12345678\setmainfont[可选选项]&#123;字体名&#125;\setsansfont[可选选项]&#123;字体名&#125;\setmonofont[可选选项]&#123;字体名&#125;设置好之后，fontspec会自动找到并匹配相应的粗体，斜体等，令我们使用\bfseries和\itshape也有效,若没有，那需要进行如下的设置。\setmainfont[ BoldFont = texgyrepagella-bold.otf , ItalicFont = texgyrepagella-italic.otf , BoldItalicFont = texgyrepagella-bolditalic.otf ]&#123;texgyrepagella-regular.otf&#125; 对于中文： 1234\setCJKmainfont[可选选项]&#123;字体名&#125;\setCJKsansfont[可选选项]&#123;字体名&#125;\setCJKmonofont[可选选项]&#123;字体名&#125;\setCJKfamilyfont&#123;中文字体族&#125;&#123;字体名&#125; 1234567891011121314151617\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;fontspec&#125;\setCJKmainfont[BoldFont = STLibian-SC-Regular,]&#123;TpldKhangXiDictTrial&#125;\setCJKsansfont&#123;DFWaWaSC-W5&#125;\setCJKmonofont&#123;STXingkai-SC-Light&#125;\setCJKfamilyfont&#123;qingsong&#125;&#123;FZQKBYSJW--GB1-0&#125;\begin&#123;document&#125;\CJKfamily&#123;qingsong&#125;锦瑟无端五十弦\rmfamily一弦一柱\textbf&#123;思华年&#125;\sffamily庄生晓梦迷蝴蝶\ttfamily望帝春深托杜鹃\end&#123;document&#125; 正文局部字体更改如何解决在文章内容中局部更换不常用字体 英文： 几个字，几句话：定义一个新的命令即可 12345678910%重新定义新的字体族命令：\newfontfamily&lt;命令&gt;[可选参数]&#123;字体名&#125;%例：\documentclass&#123;article&#125;\usepackage&#123;fontspec&#125;\newfontfamily\fugu&#123;Luminari-Regular&#125;\newfontfamily\ptmr&#123;PTMono-Regular&#125;\begin&#123;document&#125;hello, &#123;\ptmr everyone&#125;. this is my blog---&#123;\fugu yeyuqiudeng&#125;\end&#123;document&#125; 中文： 12345678910%重新定义新的字体族命令：\newCJKfontfamily&lt;命令&gt;[可选参数]&#123;字体名&#125;%例：\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;fontspec&#125;\newCJKfontfamily\qingsong&#123;FZQKBYSJW--GB1-0&#125;\begin&#123;document&#125;锦瑟无端五十弦，\qingsong&#123;一弦一柱思华年&#125;\end&#123;document&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>字体族</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之编辑器sublime的设置（Mac版）]]></title>
    <url>%2F2017%2F03%2F11%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E7%BC%96%E8%BE%91%E5%99%A8sublime%E7%9A%84%E8%AE%BE%E7%BD%AE%EF%BC%88Mac%E7%89%88%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关键词：sublime，Mac 介绍下 LaTeX 非常好用的编辑器的配置 Sublime Text是一款非常优秀的编辑器，速度快，界面简洁，插件众多。并且能跨平台使用，在Mac和Windows上都能完美使用。虽然是一款付费软件，但作者很厚道地给了无限期的试用期限。这一切正如其官网广告词说的那样：The text editor you’ll fall in love with. Skim是一款免费轻量的PDF阅读、标注工具，布局贴心友好，与OS X自带的Previewer相比，Skim能更好的注释PDF文件。 LaTeX是一款权威的科技论文排版软件，不仅可以写论文，也可以处理日常的各种文档工作，甚至是做幻灯片。相比于Word，LaTeX最大的优势是对于复杂公式的编辑与排版非常漂亮。并且用简单的命令就可以生成脚注、索引、目录和参考文献等复杂的结构。这一切优点都使得世界上众多的“科学家”们不再需要身兼作者与排版工两职，从而将更多的精力集中于文章内容本身。 本文的目的是将上述三种软件综合部署在Mac上。完成之后，你将可以在Sublime Text里面进行LaTeX代码编辑，用Skim预览生成的PDF文件。更重要的是，让你觉得，写论文也可以是一件很优美的事。 准备工作： Mac上至少4GB的空余空间 高速的互联网连接 第一步：安装MacTeX 进入MacTeX官网下载MacTeX.pkg文件。文件大约3GB. 下载完成之后，双击MacTeX.pkg进行安装。 安装完成之后，会看到许多与TeX有关的程序图标。 第二步：安装Sublime Text 进入Sublime Text官网下载最新版本的Sublime Text。这里我下载的是Sublime Text 3. 下载完成之后，将文件拖入应用程序文件夹安装。 第三步：在Sublime Text中安装Package Control我们需要在Sublime Text中下载插件以便能够很好地操作与LaTeX有关的文件。而插件是通过Package Control下载的。 进入Package Control官网复制灰色区块的代码。 打开Sublime Text。 使用快捷键“control+~”（~就在Esc键的下方）打开控制面板Console。你会在Sublime Text的底部看到弹出一个白色窗口。 将刚才复制的代码粘贴到控制面板。 按下“Enter”回车键。然后退出并重启Sublime Text。 第四步：安装LaTeX Tools Sublime Text重启后，按下“Command+Shift+P”打开命令托盘Command pallet，这一步也可以通过Tools下拉菜单完成。 在命令托盘里输入“Install Package”，按下Enter回车建。 完成之后，输入“LaTeX Tools”，找到这一项并回车安装。 退出并重启Sublime Text。 第五步：安装Skim 进Skim下载Skim并安装 打开Skim，在菜单栏中Skim &gt; Preference(选项) &gt; Sync(同步) 在预设菜单中选择Sublime Text 关闭上面这个窗口。 完成现在，我们已经做完了所有的步骤，可以打开Sublime Text，Command+N新建文件并在里面编写LaTeX代码了，完成编辑之后，Command+S保存文件，Command+B编译并运行，这时就可以在Skim里面看到PDF预览了。 此处要注意，如果要使用中文，需要再文档的开头加上 1%!TEX program = xelatex 导言区使用 1\usepackage[UTF8]&#123;ctex&#125;]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之编辑器sublime的设置（Windows版）]]></title>
    <url>%2F2017%2F03%2F11%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E7%BC%96%E8%BE%91%E5%99%A8sublime%E7%9A%84%E8%AE%BE%E7%BD%AE%EF%BC%88Windows%E7%89%88%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关键词：sublime，Windows 介绍下 LaTeX 非常好用的编辑器的配置 Sublime Text是一款非常优秀的编辑器，速度快，界面简洁，插件众多。并且能跨平台使用，在Mac和Windows上都能完美使用。虽然是一款付费软件，但作者很厚道地给了无限期的试用期限。这一切正如其官网广告词说的那样：The text editor you’ll fall in love with. sumatraPDF是Windows下跟LaTeX可以很好结合使用的PDF查看器。 LaTeX是一款权威的科技论文排版软件，不仅可以写论文，也可以处理日常的各种文档工作，甚至是做幻灯片。相比于Word，LaTeX最大的优势是对于复杂公式的编辑与排版非常漂亮。并且用简单的命令就可以生成脚注、索引、目录和参考文献等复杂的结构。这一切优点都使得世界上众多的“科学家”们不再需要身兼作者与排版工两职，从而将更多的精力集中于文章内容本身。 本文的目的是将上述三种软件综合部署在Windows上。完成之后，你将可以在Sublime Text里面进行LaTeX代码编辑，用sumatraPDF预览生成的PDF文件。更重要的是，让你觉得，写论文也可以是一件很优美的事。 准备工作： Windows上至少4GB的空余空间 高速的互联网连接 第一步：安装TeXLive 进入texlive官网下载TeXLive.exe文件。文件大约4GB. 下载完成之后，双击进行安装。 安装完成之后，会看到许多与TeX有关的程序图标。 第二步：安装Sublime Text 进入Sublime Text官网下载最新版本的Sublime Text。这里我下载的是Sublime Text 3. 下载完成之后，安装。 第三步：在Sublime Text中安装Package Control我们需要在Sublime Text中下载插件以便能够很好地操作与LaTeX有关的文件。而插件是通过Package Control下载的。 进入Package Control官网复制灰色区块的代码。 打开Sublime Text。 使用快捷键“control+~”（~就在Esc键的下方）打开控制面板Console。你会在Sublime Text的底部看到弹出一个白色窗口。 将刚才复制的代码粘贴到控制面板。 按下“Enter”回车键，等待一段时间。然后退出并重启Sublime Text。 第四步：安装LaTeX Tools Sublime Text重启后，按下“control+Shift+P”打开命令托盘Command pallet，这一步也可以通过Tools下拉菜单完成。 在命令托盘里输入“Install Package”，按下Enter回车建。 完成之后，输入“LaTeX Tools”，找到这一项并回车安装。 退出并重启Sublime Text。 第五步：安装sumatraPDF 进地址下载sumatraPDF并安装 完成现在，我们已经做完了所有的步骤，可以打开Sublime Text，Command+N新建文件并在里面编写LaTeX代码了，完成编辑之后，Command+S保存文件，Command+B编译并运行，这时就可以在sumatraPDF里面看到PDF预览了。 此处要注意，如果要使用中文，需要再文档的开头加上 1%!TEX program = xelatex 导言区使用 1\usepackage[UTF8]&#123;ctex&#125; 部分请参考http://blog.csdn.net/cdqn10086/article/details/54980846]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之绘图]]></title>
    <url>%2F2017%2F03%2F06%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E7%BB%98%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[关键词：pgf，TikZ LaTeX中基本的绘图技能不仅可以帮我们绘制一些基础的图形，还可以用于文档版面的设计。 目前我们最常使用的绘图宏包是 pgf ,英文是 portable graphics format （可移植图形格式），TikZ宏包是 pgf 最主要的前端层实现。 要使用TikZ宏包，只需要直接调用他就可以了，因为我们暂时用不到太复杂的功能。 1\usepackage&#123;tikz&#125; 使用 TikZ 绘图，我们一般将图形放置在 tikzpicture 环境中，除非单个元素，可以直接放到环境外，开头需要添加\tikz。 12345\tikz \draw (0,0) circle (3mm);---\begin&#123;tikzpicture&#125;\draw (0,0) circle (3mm);\end&#123;tikzpicture&#125; ……（待续）]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>绘图</tag>
        <tag>pgf</tag>
        <tag>TikZ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之插图]]></title>
    <url>%2F2017%2F03%2F05%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E6%8F%92%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[关键词：插图，变换 图片的插入与变换是必须习得的技能。 插图使用LaTeX的基本宏包 graphics 或 graphicx 为插图和几何提供命令。 我们默认你已经知道如何设置图片和表格的浮动体，如果此概念未知，请见此 插图命令由宏包 graphics 或 graphicx 的 命令完成（建议使用 graphicx 宏包，因为支持 选项 = 值 的语法） \includegraphics[选项]{文件名称} height 图形的高度（可为任何 TEX 度量单位）。 totalheight 图形的全部高度，可为任何 TEX 度量单位（ 6/95 增加）。 width 图形的宽度（可为任何 TEX 度量单位）。 scale 图形的缩放因子，设定 scale=2 会使 插入的图形的大小为其自然大小的两倍。 angle 设定旋转的角度，以度为单位，逆时针方向为正。 origin origin 指定图形绕那一点旋转，缺省 是图形的参考点（12/95 增加）。 比如 origin=c 将使图形绕它的中心旋转。可选择的值有（ l,r,c,t,b,B）分别表示（左右中上下基线），可以同时使用一个或者两个值，默认值lb bb 设定 BoundingBox 的值。 bb=10 20 100 200 设定 BoundingBox 的左下角在 (10,20)，右上角在 (100,200)。因为 \includegraphics 会自动从 EPS 文件中读入 BoundingBox 行 所给的值，所以一般不使用 bb 这个选项。但它在 EPS 文件 中的 BoundingBox 丢失或出错时还是很有用的。 插入图片的基础方法： 12345678910111213\documentclass[]&#123;article&#125;\usepackage&#123;caption,subcaption&#125;\usepackage&#123;graphicx&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;figure&#125;\centering \includegraphics[width = 1cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\includegraphics[height = 2cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\includegraphics[scale = 0.2]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\caption&#123;小波好&#125;\end&#123;figure&#125;\end&#123;document&#125; 1234\includegraphics[width = 1cm,angle = -90]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\includegraphics[height = 2cm,angle = -45,origin = c]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\includegraphics[scale = 0.2]&#123;/Users/fplee/blog/public/xiaobo.png&#125;%具体的角度设置见上面的表格 NOTICE 由于图片编译费时且文件大小略大，因此在论文初期排版时，可以设定 \includegraphics 使用draft 选项，或者文档类使用全局的 draft 选项，这样编译得到的PDF只会得到一个与图形大小相同的大有文件名的方框。 123\documentclass[draft]&#123;article&#125;或者使用\usepackage[draft]&#123;graphicx&#125; 变换待补充]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>图表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之表格绘制（四）：图表的并排]]></title>
    <url>%2F2017%2F03%2F04%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E8%A1%A8%E6%A0%BC%E7%BB%98%E5%88%B6%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%9B%BE%E8%A1%A8%E7%9A%84%E5%B9%B6%E6%8E%92%2F</url>
    <content type="text"><![CDATA[关键词：图表，并排 LaTeX的浮动环境并不对环境的内容限制，因此，把几个图表放在一个浮动体内即可以实现并排或者混排。一般使用 minipage 环境实现此功能。 123\begin&#123;minipage&#125;[position][height][inner-pos]&#123;width&#125;text\end&#123;minipage&#125; 图表并排例子1：两张图片高度一致，caption 可以显示在一行的情况，使用不同的 caption 12345678910111213141516\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;figure&#125;[htp]\begin&#123;minipage&#125;&#123;0.48\linewidth&#125;\centering\includegraphics[height = 3cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\caption&#123; 小波 &#125;\end&#123;minipage&#125;\begin&#123;minipage&#125;&#123;0.48\linewidth&#125; \centering\includegraphics[height = 3cm]&#123;/Users/fplee/blog/public/yeyuqiudeng.jpg&#125;\caption&#123; 夜雨秋灯 &#125;\end&#123;minipage&#125;\end&#123;figure&#125;\end&#123;document&#125; 例子2：两张图片高度不一致，caption 按上述方法不可以显示在一行的情况，使用不同的 caption 123456789101112131415161718192021222324252627\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;graphics&#125;\begin&#123;document&#125;\begin&#123;figure&#125;[htbp]\begin&#123;minipage&#125;&#123;0.45\textwidth&#125;\centering\includegraphics[height = 1.5cm]&#123;/Users/fplee/blog/public/yeyuqiudeng.jpg&#125;\quad\end&#123;minipage&#125;\begin&#123;minipage&#125;&#123;0.45\textwidth&#125;\centering\includegraphics[height = 6cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\end&#123;minipage&#125;\vskip 5mm\begin&#123;minipage&#125;&#123;0.45\textwidth&#125;\caption&#123;夜雨秋灯&#125;\end&#123;minipage&#125;\quad\begin&#123;minipage&#125;&#123;0.45\textwidth&#125;\caption&#123;小波&#125;\end&#123;minipage&#125;\end&#123;figure&#125;\end&#123;document&#125; 例子3：图片或者表格自带小标题，公用大标题，如何设置 使用 caption 以及 subcaption 宏包 12345678910111213141516171819\documentclass[]&#123;article&#125;\usepackage&#123;caption,subcaption&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;figure&#125;[htp]\begin&#123;minipage&#125;&#123;0.48\textwidth&#125;\centering\includegraphics[height = 3cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\subcaption&#123; 小波 &#125;\end&#123;minipage&#125;\begin&#123;minipage&#125;&#123;0.48\textwidth&#125; \centering\includegraphics[height = 3cm]&#123;/Users/fplee/blog/public/yeyuqiudeng.jpg&#125;\subcaption&#123; 夜雨秋灯 &#125;\end&#123;minipage&#125;\centering\caption&#123;两张图&#125;\end&#123;figure&#125;\end&#123;document&#125; 例子4：一图一表混排 1234567891011121314151617181920212223242526272829\documentclass[]&#123;article&#125;\usepackage&#123;caption,subcaption&#125;\usepackage&#123;booktabs&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;figure&#125;[htp]\centering\begin&#123;minipage&#125;&#123;0.48\textwidth&#125;\centering\includegraphics[height = 3cm]&#123;/Users/fplee/blog/public/xiaobo.png&#125;\subcaption&#123; 小波 &#125;\end&#123;minipage&#125;\begin&#123;minipage&#125;&#123;0.48\textwidth&#125; \centering\subcaption&#123; 夜雨秋灯 &#125;\begin&#123;tabular&#125;&#123;c|c|c&#125;\toprule锦瑟&amp;无端&amp;五十弦\\\midrule一弦&amp;一柱&amp;思华年\\庄生&amp;晓梦&amp;迷蝴蝶\\望帝&amp;春深&amp;托杜鹃\\\bottomrule\end&#123;tabular&#125;\end&#123;minipage&#125;\centering\caption&#123;一图一表&#125;\end&#123;figure&#125;\end&#123;document&#125; 参考文章： 并列排图 ​]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>图表</tag>
        <tag>浮动体</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之初见LaTeX]]></title>
    <url>%2F2017%2F03%2F04%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%9D%E8%A7%81LaTeX%2F</url>
    <content type="text"><![CDATA[关键词：安装，office 比较 介绍下LaTeX最表象的东西 LaTeX是什么TeX作者高德纳，斯坦福大学教授，于1978年开始编写，直到1989年TeX才停止更改。 LaTeX 是用TeX写的，即 LaTeX 是使用 TeX 这种宏语言所编写的宏集，并作为了一种格式固定了下来。 我们用 C 语言做一个类比，就像 C 语言有不同的编译器，实现 TeX 也有不同的程序，不同的实现我们成为不同的 TeX 引擎。我们现在所说的pdfTeX，XeTeX ，pTeX，ApTeX 等都是 TeX 引擎。 LaTeX的优点&amp;LaTeX与office的差异LaTeX的优点 完全开源免费 是论文排版界标准，国外大量期刊提供模板，并推荐使用。 LaTeX制作文档与幻灯片，令作者专注于内容，一切简洁明了。 Word很容易被修改，显得不够严肃，LaTeX生成的PDF正式，美观。 合格的数学软件都可以转LaTeX，合格的文献管理软件都能生成BibTeX。 LaTeX对比office的差异 LaTeX office 公式输入友好，赏心悦目 公式输入糟糕，需要行内公式难看 全部可以使用键盘输入，降低鼠标的利用，效率提高 希腊字母等需要用鼠标去挑 结构优化的算法好，不容易出现行尾断字 段末容易出现断字 参考文献插入十分友好 参考文献插入有点 图表众多的文档依然十分容易排布 图表众多的文档及其容易崩溃 LaTeX的安装——推荐安装TeX LiveMac下： Mac下的TeX Live 称为 MacTeX 下载地址：https://www.tug.org/mactex/mactex-download.html Windows下： Windows 下称为TeX Live 下载地址：https://www.tug.org/texlive/ 还可以直接从https://mirrors.tuna.tsinghua.edu.cn/CTAN/进行下载使用，下列连接分别为MacTeX，TeXLive，MikTeX https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/mac/mactex/ https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/ https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/win32/miktex/ LaTeX编辑器LaTeX有众多的编辑器可以使用 TeXworks WinEdt Texmaker TeXstudio Mac下配置方便的LaTeX编辑器请看《LaTeX入门系列之编辑器sublime的设置（Mac版）》 Windows下配置方便的LaTeX编辑器请看《LaTeX入门系列之编辑器sublime的设置（Windows版）》]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>安装</tag>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之表格绘制（三）：标题控制与浮动体（基础）]]></title>
    <url>%2F2017%2F03%2F03%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E8%A1%A8%E6%A0%BC%E7%BB%98%E5%88%B6%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%A0%87%E9%A2%98%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%B5%AE%E5%8A%A8%E4%BD%93%2F</url>
    <content type="text"><![CDATA[关键词：表格，浮动体，标题 什么是浮动体：浮动体是一个可以移动的盒子，一般用在占块较大的地方，可以让盒子在当前位置的前后合适位置移动，使文章的形式不至于因为固定的盒子而大量留白导致难看。 浮动体不仅可以实现上述功能，还可以给表格或者图片等添加标题，设置编号。 浮动体环境LaTeX两种浮动文档体环境：figure 和 table，用于图片和表格的排版。 123\begin&#123;table&#125;[位置]其他内容(一般是表格或图片选项)\end&#123;table&#125; 其中位置选型有以下几种选择： h: 代码所在地上下文浮动 t: top，页顶 p: page， 新的一页 b: bottom， 页底 选项可以混合使用，如 [htpb] 浮动体常见的使用方式就是直接在 table 环境放入 tabular 表格；在 figure 环境放置 \includegraphics 放入的图片，会在浮动体内部使用 \centering 让图表居中。 NOTICE: 需要我们注意的是，虽然我们用 figure 和 table 名称作为环境名称，但是里面不一定要放置图片或者表格，也就是说环境名字和其内部的内容是没有必然联系的。 标题设置浮动体可以为图片表格或者其他形式的东西提供标题设置，使用 \caption 命令。 12\caption&#123;标题&#125;\caption[短标题]&#123;长标题&#125; 放置的位置由图片或者表格决定，一般图片的标题放在图片的下方，表格的标题放到表格的上方。 而用于进行交叉引用的标签 \label 则放在 \caption 之后即可。 12345678910\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\usepackage&#123;graphics&#125;\begin&#123;document&#125;\begin&#123;figure&#125;[htp]\centering\includegraphics&#123;/Users/fplee/blog/public/yeyuqiudeng.jpg&#125;\caption[logo]&#123;夜雨秋灯到天明&#125;\label&#123;夜雨秋灯&#125;\end&#123;figure&#125;\end&#123;document&#125; 当我们要控制表头或图题的字体间距和对齐方式时，我们可以使用 \caption 宏包。 \caption 宏包提供两种使用方式 作为导入宏包的可选项 \usepackage[font = 11pt, labelfont = 13pt]{caption} 在浮动体内部用 \captionsetup 来设置 12\usepackage&#123;caption&#125;\captionsetup&#123;font = 11pt,……&#125; 还可以只针对所有 table 或者 figure 进行修改 12\usepackage&#123;caption&#125;\captionsetup[figure]&#123;font = 11pt,……&#125; 具体的 caption 操作请参考宏包]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>图表</tag>
        <tag>浮动体</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之表格绘制（二）：进阶]]></title>
    <url>%2F2017%2F03%2F02%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E8%A1%A8%E6%A0%BC%E7%BB%98%E5%88%B6%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[[TOC] 关键词：单元格合并与分割，定宽表格 上一节，讨论了绘制表格的最基础的部分，这一节讲关于单元的合并分割以及定宽表格。 单元的合并分割有时候我们会遇到要将几个单元格合并为一个单元格的情况，用如下方法 对于同行不同单元格之间的合并使用命令 \multicolumn{合并单元格个数}{左对齐，居中，右对齐等选项}{单元格内容} 对于同列不同单元格合并使用宏包 \multirow{行数}{内容}，注意\一定要在 1234567891011121314151617\documentclass[border=&#123;30mm 3mm 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;multirow&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;|l|c|c|r|&#125;\hline\multirow&#123;2&#125;*&#123;姓名&#125;&amp;\multicolumn&#123;3&#125;&#123;|c|&#125;&#123;项目&#125;\\\cline&#123;2-4&#125; &amp;吃&amp;喝&amp;玩\\\hline张三&amp;鱼&amp;酒&amp;吉他\\李四&amp;肉&amp;水&amp;code\\王麻子&amp;海鲜&amp;饮料&amp;羽毛球\\\hline\end&#123;tabular&#125;\end&#123;document&#125; 关键点： 这个图的关键点有如下几个： \multicolumn{3}{|c|}{项目}中的{|c|}连个竖线要有，默认不写时，表格内没有连线； \cline{2-4} 用于合并不同行单元格之后，划出不完全或者间断的分割线的； 表格的最上方和最左侧一行可以用特别的宏包来单独控制：\makecell 宏包 ​ 在\makecell{ } 中可以用 \\ 进行自由的换行 表头的斜线分割使用另一个宏包：\diagbox 宏包 \diagbox{左}{右} \diagbox{左}{中}{右} 123456789101112131415\documentclass[border=&#123;30mm 3pt 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;multirow&#125;\usepackage&#123;diagbox&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;|l|c|c|r|&#125;\hline\diagbox&#123;姓名&#125;&#123;项目&#125; &amp;吃&amp;喝&amp;玩\\\hline张三&amp;鱼&amp;酒&amp;吉他\\李四&amp;肉&amp;水&amp;code\\王麻子&amp;海鲜&amp;饮料&amp;羽毛球\\\hline\end&#123;tabular&#125;\end&#123;document&#125; 练习题（习题来自于刘海洋老师的《LaTeX入门》一书的298页： 解答请见这里http://lierhua.top/2017/03/01/LaTeX%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/ 科研论文三线表一般高校的毕业论文一般会要求把表格设置为三线表，三线表顶部和底部的线比较粗，中间较细，粗细的比例由各机构规定。 三线表需要使用 booktabs 宏包： 1234\toprule: 顶线，有一个可选参数改变顶线的粗细\toprule[线宽]\midrule: 中线\bottomrule: 底线\cmidrule: 部分中线 12345678910111213141516\documentclass[border=&#123;30mm 3pt 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;diagbox&#125;\usepackage&#123;booktabs&#125;\usepackage&#123;ctex&#125;\usepackage&#123;tabularx&#125;\begin&#123;document&#125;\begin&#123;tabularx&#125;&#123;\textwidth&#125;&#123;c|X|X|X|X|X|X|X&#125;\toprule[1mm]%不加[1mm]时使用默认的宽度\diagbox&#123;项目&#125;&#123;日期&#125;&amp;周一&amp;周二&amp;周三&amp;周四&amp;周五&amp;周六&amp;周天\\\midrule乒乓球&amp;1&amp;2&amp;4&amp;1&amp;7&amp;3&amp;6\\羽毛球&amp;6&amp;0&amp;8&amp;1&amp;2&amp;5&amp;8\\\bottomrule[1mm]\end&#123;tabularx&#125;\end&#123;document&#125; 123456789101112131415161718\documentclass[border=&#123;30mm 3pt 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;diagbox&#125;\usepackage&#123;multirow&#125;\usepackage&#123;booktabs&#125;\usepackage&#123;ctex&#125;\usepackage&#123;tabularx&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;c|ccccccc&#125;\toprule\multirow&#123;2&#125;*&#123;\diagbox&#123;项目&#125;&#123;日期&#125;&#125;&amp;\multicolumn&#123;1&#125;&#123;c&#125;&#123;男&#125;&amp;\multicolumn&#123;2&#125;&#123;c&#125;&#123;女&#125;\\\cmidrule&#123;2-2&#125;\cmidrule&#123;3-4&#125; &amp;李四&amp;张三&amp;王麻子\\\midrule乒乓球&amp;1&amp;2&amp;4\\羽毛球&amp;6&amp;0&amp;8\\\bottomrule\end&#123;tabular&#125;\end&#123;document&#125; 定宽表格的使用LaTeX的 tabular 环境可以产生固定宽度的表格，我们普遍使用 tabularx 提供的 tabularx 环境来实现与 tabular 环境一样的效果， tabularx 提供的一个称为X的列格式说明符（与 clr 同一位置）。 宏包环境如下： 1234\usepackage&#123;tabularx&#125;\begin&#123;tabularx&#125;&#123;宽度&#125;[垂直对齐]&#123;列格式说明(c,l,r,X,p&#123;宽度&#125;)&#125;%\begin&#123;tabularx&#125;&#123;\textwidth&#125;[垂直对齐]&#123;|c|l|r|X|p&#123;10pt&#125;|&#125;\end&#123;tabularx&#125; 1234567891011121314\documentclass[border=&#123;30mm 3pt 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;diagbox&#125;\usepackage&#123;ctex&#125;\usepackage&#123;tabularx&#125;\begin&#123;document&#125;\begin&#123;tabularx&#125;&#123;\textwidth&#125;&#123;c|X|X|X|X|X|X|X&#125;\hline\diagbox&#123;项目&#125;&#123;日期&#125;&amp;周一&amp;周二&amp;周三&amp;周四&amp;周五&amp;周六&amp;周天\\\hline乒乓球&amp;1&amp;2&amp;4&amp;设定一个验证自动换行&amp;7&amp;3&amp;6\\羽毛球&amp;6&amp;0&amp;8&amp;1&amp;2&amp;5&amp;8\\\hline\end&#123;tabularx&#125;\end&#123;document&#125; 长表格的使用我们之前讲过，表格其实是一个盒子，因此，不超过一页的表格其实如果他不放到一个浮动体环境中，那么会比较不适合排版的。但是长表格很长，甚至超过了一页，所以，LaTeX有一个用于处理长表格的宏包用于处理这种情况：longtable 宏包。长表格的使用具体见 longtable 宏包。 小tipsCTAN论坛提供了一个制作表格的小插件：excel2latex，大家可以去论坛查看，地址如下https://www.ctan.org/tex-archive/support/excel2latex/]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>图表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX习题答案]]></title>
    <url>%2F2017%2F03%2F01%2FLaTeX%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88%2F</url>
    <content type="text"><![CDATA[以下是博客内个习题的答案 顺序为乱序，请按照习题图片或者要求或者标注寻找 习题： 答案： 123456789101112131415161718192021222324252627282930\documentclass[border=&#123;30mm 3pt 30mm 3pt&#125;]&#123;standalone&#125;\usepackage&#123;multirow&#125;\usepackage&#123;makecell&#125;\usepackage&#123;diagbox&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;\begin&#123;tabular&#125;&#123;|c|cc|c|c|c|c|c|&#125;\hline% \multirow&#123;2&#125;*&#123;\makecell&#123;摩擦副\\配对材料&#125;&#125;&amp; \multicolumn&#123;2&#125;&#123;c|&#125;&#123;\multirow&#123;2&#125;*&#123;\diagbox&#123;锁紧结构&#125;&#123;锁紧力矩&#125;&#125;&#125; &amp;\multicolumn&#123;5&#125;&#123;c|&#125;&#123;供油压力(MPa)&#125;\\\cline&#123;4-8&#125; &amp; &amp; &amp;2&amp;5&amp;7&amp;10&amp;12\\\hline\multirow&#123;5&#125;*&#123;调质钢&#125;&amp;\multirow&#123;5&#125;*&#123;摩擦锥&#125;&amp;\multicolumn&#123;1&#125;&#123;|c|&#125;&#123;$\theta = 60^\circ$, 单槽&#125;&amp;1.3&amp;2.6&amp;2.9&amp;3.5&amp;3.8\\\cline&#123;3-8&#125; &amp; &amp;\multicolumn&#123;1&#125;&#123;|c|&#125;&#123;$\theta = 60^\circ$, 单槽&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\cline&#123;3-8&#125; &amp; &amp;\multicolumn&#123;1&#125;&#123;|c|&#125;&#123;$\theta = 60^\circ$, 单槽&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\cline&#123;3-8&#125; &amp; &amp;\multicolumn&#123;1&#125;&#123;|c|&#125;&#123;$\theta = 60^\circ$, 单槽&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\cline&#123;3-8&#125; &amp; &amp;\multicolumn&#123;1&#125;&#123;|c|&#125;&#123;$\theta = 60^\circ$, 单槽&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\hline\multirow&#123;2&#125;*&#123;H62&#125;&amp;\multicolumn&#123;2&#125;&#123;c|&#125;&#123;内摩擦环&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\cline&#123;2-8&#125; &amp;\multicolumn&#123;2&#125;&#123;c|&#125;&#123;外摩擦环&#125;&amp;1.8&amp;2.6&amp;3.9&amp;4.7&amp;5.1\\\hline\end&#123;tabular&#125;\end&#123;document&#125; 关键点：multicolumn不仅可以进行行单元格合并处理，还可以对某个单元格的格式进行重新设置，比如更改边框 的添加等。]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>table,习题答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LaTeX入门系列之图表绘制（一）：基础]]></title>
    <url>%2F2017%2F03%2F01%2FLaTeX%E5%85%A5%E9%97%A8%E7%B3%BB%E5%88%97%E4%B9%8B%E8%A1%A8%E6%A0%BC%E7%BB%98%E5%88%B6%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[LaTeX的图表因为其缺乏直观的代码对初学者不甚友好，我在这里对LaTeX中的基本的图表绘制做一个综述，方便各种图表绘制时的备查。 表格是一种二维的信息表达形式。 ###基础表格绘制 一般使用 tabular 环境进行表格的排布 使用 array 环境进行包含数学符号等的内容的排布 12345678910\begin&#123;tabular&#125;[对齐(可选有t和b)]&#123;列格式(lcr等三种形式)&#125;内容&amp;内容&amp;……&amp;内容\\……\end&#123;tabular&#125;其中列格式有如下：l: 左对齐列c: 居中对齐r: 右对齐列p&#123;&#125;: 固定此列的宽度，可自动换行|：列与列之间添加分隔的竖线 1234\begin&#123;array&#125;[对齐]&#123;列格式&#125;内容&amp;内容&amp;……&amp;内容\\……\end&#123;array&#125; 其中，\\表示换行，用&amp;表示不同单元格的分隔。 tabular 和 array 表示的都是一个普通的盒子，因此是直接与其他的文字或公式混合在一起的，我们可以将其置于一个浮动体中来规避。 一个普通表格例子： 1234567891011121314\documentclass[a4paper]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125; \begin&#123;tabular&#125;&#123;|c|ccc|p&#123;3cm&#125;|&#125;\hline空&amp;吃&amp;喝&amp;玩&amp;乐\\\hline 张三&amp;鱼&amp;酒&amp;吉他&amp;赚钱\\李四&amp;肉&amp;水&amp;code&amp;赚钱\\王麻子&amp;海鲜&amp;饮料&amp;羽毛球&amp;赚钱\\\hline\end&#123;tabular&#125;\end&#123;document&#125; 一个行列式例子： 12345678910111213\documentclass[]&#123;article&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;$\left( %行列式中大部分都会含有数学成分，因此需要使用将其全部加入$$公式环境中\begin&#123;tabular&#125;&#123;lcc|r&#125; &amp;吃&amp;喝&amp;玩\\张三&amp;鱼&amp;酒&amp;吉他\\李四&amp;肉&amp;水&amp;code\\王麻子&amp;海鲜&amp;饮料&amp;羽毛球\\\end&#123;tabular&#125;\right)$%注意两边大括号的书写方式\left(和\right)\end&#123;document&#125; 改变行列间距的方法 列间距：最小距离的一半由变量 \tabcolsep 和 \arraycolsep 控制 行间距：由宏 \arraystretch 控制 12345678910111213141516171819\documentclass[border=&#123;30mm 3mm 30mm 3mm&#125;]&#123;standalone&#125;\usepackage&#123;ctex&#125;\begin&#123;document&#125;%---------------%\arraystretch是宏，默认值是1，通过如下修改可以改变其间隔的倍数\renewcommand\arraystretch&#123;2&#125;\setlength\tabcolsep&#123;10mm&#125;%\tabcolsep是变量，对应的是具体的数值%---------------$\left( \begin&#123;tabular&#125;&#123;lcc|r&#125; &amp;吃&amp;喝&amp;玩\\张三&amp;鱼&amp;酒&amp;吉他\\李四&amp;肉&amp;水&amp;code\\王麻子&amp;海鲜&amp;饮料&amp;羽毛球\\\end&#123;tabular&#125;\right)$\end&#123;document&#125; NOTICE：\arraystretch是宏，所以用\renewcommand 来设定 ​ \tabcolsep 是变量，用 \setlength 设定]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>表格</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Word字号与磅数对照表]]></title>
    <url>%2F2017%2F01%2F03%2F%20Word%20%E5%AD%97%E5%8F%B7%E5%AF%B9%E7%85%A7%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[关键词：Word，字号，磅 介绍下 Word 字号对照表 字号 磅 初号 42 小初 36 一号 26 小一号 24 二号 22 小二号 18 三号 16 小三号 15 四号 14 小四号 12 五号 10.5 小五号 9 六号 7.5 小六号 6.5 七号 5.5 八号 5 度量换算表 英寸(in) 厘米(cm) 毫米(mm) 磅(pt) 像素 inch centimeter millimetre point pixel 1 2.54 25.4 72 96（非固定） ppi(pixels per inch):每英寸像素数量，一般用于电脑行业 dpi(dots per inch):每英寸点数，一般用于印刷行业]]></content>
      <categories>
        <category>排版</category>
      </categories>
      <tags>
        <tag>word</tag>
        <tag>字号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4A0 到 A10的纸张尺寸]]></title>
    <url>%2F2017%2F01%2F03%2FTable%20of%20Paper%20Sizes%20From%204A0%20to%20A10%2F</url>
    <content type="text"><![CDATA[关键词：A4,纸张尺寸 介绍下纸张的尺寸 Size Width x Height (mm) Width x Height (in) 4A0 1682 x 2378 mm 66.2 x 93.6 in 2A0 1189 x 1682 mm 46.8 x 66.2 in A0 841 x 1189 mm 33.1 x 46.8 in A1 594 x 841 mm 23.4 x 33.1 in A2 420 x 594 mm 16.5 x 23.4 in A3 297 x 420 mm 11.7 x 16.5 in A4 210 x 297 mm 8.3 x 11.7 in A5 148 x 210 mm 5.8 x 8.3 in A6 105 x 148 mm 4.1 x 5.8 in A7 74 x 105 mm 2.9 x 4.1 in A8 52 x 74 mm 2.0 x 2.9 in A9 37 x 52 mm 1.5 x 2.0 in A10 26 x 37 mm 1.0 x 1.5 in Size Micrometres Millimetres Centimetres Metres 4A0 1682000 x 2378000 μm 1682 x 2378 mm 168.2 x 237.8 cm 1.682 x 2.378 m 2A0 1189000 x 1682000 μm 1189 x 1682 mm 118.9 x 168.2 cm 1.189 x 1.682 m A0 841000 x 1189000 μm 841 x 1189 mm 84.1 x 118.9 cm 0.841 x 1.189 m A1 594000 x 841000 μm 594 x 841 mm 59.4 x 84.1 cm 0.594 x 0.841 m A2 420000 x 594000 μm 420 x 594 mm 42.0 x 59.4 cm 0.420 x 0.594 m A3 297000 x 420000 μm 297 x 420 mm 29.7 x 42.0 cm 0.297 x 0.420 m A4 210000 x 297000 μm 210 x 297 mm 21.0 x 29.7 cm 0.210 x 0.297 m A5 148000 x 210000 μm 148 x 210 mm 14.8 x 21.0 cm 0.148 x 0.210 m A6 105000 x 148000 μm 105 x 148 mm 10.5 x 14.8 cm 0.105 x 0.148 m A7 74000 x 105000 μm 74 x 105 mm 7.4 x 10.5 cm 0.074 x 0.105 m A8 52000 x 74000 μm 52 x 74 mm 5.2 x 7.4 cm 0.052 x 0.074 m A9 37000 x 52000 μm 37 x 52 mm 3.7 x 5.2 cm 0.037 x 0.052 m A10 26000 x 37000 μm 26 x 37 mm 2.6 x 3.7 cm 0.026 x 0.037 m Size Thou Inches Feet Yards 4A0 66220 x 93622 th 66.220 x 93.622 in 5.518 x 7.802 ft 1.839 x 2.601 yd 2A0 46811 x 66220 th 46.811 x 66.220 in 3.901 x 5.518 ft 1.300 x 1.839 yd A0 33110 x 46811 th 33.110 x 46.811 in 2.759 x 3.901 ft 0.920 x 1.300 yd A1 23388 x 33110 th 23.388 x 33.110 in 1.949 x 2.759 ft 0.650 x 0.920 yd A2 16535 x 23388 th 16.535 x 23.388 in 1.378 x 1.949 ft 0.459 x 0.650 yd A3 11693 x 16535 th 11.693 x 16.535 in 0.974 x 1.378 ft 0.325 x 0.459 yd A4 8268 x 11693 th 8.268 x 11.693 in 0.689 x 0.974 ft 0.230 x 0.325 yd A5 5827 x 8268 th 5.827 x 8.268 in 0.486 x 0.689 ft 0.162 x 0.230 yd A6 4134 x 5827 th 4.134 x 5.827 in 0.344 x 0.486 ft 0.115 x 0.162 yd A7 2913 x 4134 th 2.913 x 4.134 in 0.243 x 0.344 ft 0.081 x 0.115 yd A8 2047 x 2913 th 2.047 x 2.913 in 0.171 x 0.243 ft 0.057 x 0.081 yd A9 1457 x 2047 th 1.457 x 2.047 in 0.121 x 0.171 ft 0.040 x 0.057 yd A10 1024 x 1457 th 1.024 x 1.457 in 0.085 x 0.121 ft 0.028 x 0.040 yd Size Pica Point(pt) HPGL 4A0 397.3 x 561.7 4768 x 6741 67280 x 95120 2A0 280.9 x 397.3 3370 x 4768 47560 x 67280 A0 198.7 x 280.9 2384 x 3370 33640 x 47560 A1 140.3 x 198.7 1684 x 2384 23760 x 33640 A2 99.2 x 140.3 1191 x 1684 16800 x 23760 A3 70.2 x 99.2 842 x 1191 11880 x 16800 A4 49.6 x 70.2 595 x 842 8400 x 11880 A5 35.0 x 49.6 420 x 595 5920 x 8400 A6 24.8 x 35.0 298 x 420 4200 x 5920 A7 17.5 x 24.8 210 x 298 2960 x 4200 A8 12.3 x 17.5 147 x 210 2080 x 2960 A9 8.7 x 12.3 105 x 147 1480 x 2080 A10 6.1 x 8.7 74 x 105 1040 x 1480]]></content>
      <categories>
        <category>排版</category>
      </categories>
      <tags>
        <tag>A4</tag>
        <tag>纸张尺寸</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo & NexT添加菜单分类并作为文章目录]]></title>
    <url>%2F2017%2F01%2F01%2FHexo%26NexT%E6%B7%BB%E5%8A%A0%E8%8F%9C%E5%8D%95%E5%88%86%E7%B1%BB%E5%B9%B6%E4%BD%9C%E4%B8%BA%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95%2F</url>
    <content type="text"><![CDATA[生成默认已有的分类 在NexT中，默认的menu有：首页，归档，分类，标签，关于 以标签 tags 为例： 12$hexo new page &quot;tags&quot;//在 hexo &gt; source 文件夹会出现一个tags文件夹 然后： 在 tags 文件夹的index.md文档中添加 type: tags 在 NexT 内的 _config 文档的menu中恢复 tags 的使用 生成没有的分类1$hexo new page &quot;essay&quot; 然后： 在 essay 文件夹下的 index.md 文档中添加 “type: essay “ 在NexT的config的menu中添加 essay: /categories/essay 在NexT的languages中修改中文文件，添加essay的中文显示 在需要放入 essay 菜单的文章的 front matter 中添加 categories: essay]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在hexo添加一个标签云页面]]></title>
    <url>%2F2017%2F01%2F01%2F%E5%A6%82%E4%BD%95%E5%9C%A8hexo%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%A0%87%E7%AD%BE%E4%BA%91%E9%A1%B5%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[添加一个标签云页面，并在菜单中显示页面链接。 新建一个页面，命名为 tags 。命令如下： 1hexo new page &quot;tags&quot; 编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。 1234title: All tagsdate: 2014-12-22 12:39:04type: &quot;tags&quot;--- 注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如： 12345title: All tagsdate: 2014-12-22 12:39:04type: &quot;tags&quot;comments: false--- 在菜单中添加链接。编辑主题的 _config.yml ，添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 神器：IPic图床工具，可以把图片传至图床，生成Markdown格式的链接 More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>NexT</tag>
      </tags>
  </entry>
</search>
